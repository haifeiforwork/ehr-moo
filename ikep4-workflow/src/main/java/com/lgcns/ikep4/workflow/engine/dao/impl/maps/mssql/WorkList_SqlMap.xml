<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="com.lgcns.ikep4.workflow.engine.model.WorkItemBean" >
	<typeAlias alias = "WorkItemBean" type="com.lgcns.ikep4.workflow.engine.model.WorkItemBean"/>
	

	<!-- Workform 조회결과 -->
	<resultMap id="workform" class="WorkItemBean" groupBy="insLogId">
		<result property="insLogId"       column="LOG_ID"      		columnIndex="1"/>
		<result property="instanceId"     column="INSTANCE_ID"    	columnIndex="2"/>
		<result property="processId"      column="PROCESS_ID"     	columnIndex="3"/>
		<result property="processVer"     column="PROCESS_VER"    	columnIndex="4"/>
		<result property="processName"    column="PROCESS_NAME"    	columnIndex="5"/>
		<result property="activityId"     column="ACTIVITY_ID"    	columnIndex="6"/>
		<result property="activityName"   column="ACTIVITY_NAME"  	columnIndex="7"/>
		<result property="title"          column="TITLE"          	columnIndex="8"/>
		<result property="userId"         column="PERFORMER_ID"     columnIndex="9"/>
		<result property="createDate"     column="CREATE_DATE"    	columnIndex="10"/>
		<result property="varDefine"      column="VAR_DEFINE"    	columnIndex="11"/>
		<result property="varSchema"      column="VAR_SCHEMA"    	columnIndex="12"/>
	</resultMap>	
	
	<!-- ANSI -->
	<!-- insert : To-Do 데이터를 추가한다. -->
	<insert id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.insert" parameterClass="WorkItemBean">
      <![CDATA[ 
      		/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.insert */
      		
			INSERT INTO IKEP4_WF_TODO_LIST						
			(LOG_ID, INSTANCE_ID, PROCESS_ID, PROCESS_VER, MI_SEQ, MI_BLOCK, ACTIVITY_ID, ACTIVITY_NAME, TITLE, PERFORMER_ID, STATE, CREATE_DATE)     					
			VALUES ( #insLogId#, #instanceId#, #processId#, #processVer#, #miSeq#, #miBlock#, #activityId#, #activityName#, #title#, #userId#, #state#, #createDate# )       			
       ]]>
   </insert>
   
   <!-- ANSI -->
   <!-- insertMultiInstance : 멀티 데이터를 추가한다. -->
	<insert id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.insertMultiInstance" parameterClass="WorkItemBean">
      <![CDATA[ 
      		/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.insertMultiInstance */
      		
			INSERT INTO IKEP4_WF_MULTI_LIST						
			(LOG_ID, INSTANCE_ID, PROCESS_ID, PROCESS_VER, MI_SEQ, MI_BLOCK, ACTIVITY_ID, ACTIVITY_NAME, TITLE, PERFORMER_ID, STATE, CREATE_DATE)     					
			VALUES ( #insLogId#, #instanceId#, #processId#, #processVer#, #miSeq#, #miBlock#, #activityId#, #activityName#, #title#, #userId#, 'COMPLETE', #createDate# )       			
       ]]>
   </insert>   
   
   	<!-- ANSI -->
   	<update id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.updateDelegate" parameterClass="WorkItemBean">
      <![CDATA[ 
      		/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.updateDelegate */ 
      
			UPDATE 	IKEP4_WF_TODO_LIST
			   SET 	PERFORMER_ID = #delegatorId#, 
			   		DELEGATOR_ID = #userId#,
				   	UPDATE_DATE = CURRENT_TIMESTAMP
			 WHERE 	LOG_ID = #insLogId#
       ]]>
   </update>    
   
   <!-- 멀티 데이터가 모두 완료가 되었는지 체크하는 쿼리 : CNT 값이 '0'이면 완료 -->
   	<select id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.isMultiComplete" parameterClass="InstanceBean" resultClass="int">
   		<![CDATA[
			/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.isMultiComplete */
					
			SELECT COUNT(*) CNT
			  FROM ( 
			        SELECT  userId
			          FROM    (
			            /* 지정방식     */
			            SELECT  PARTI.PERFORMER_ID AS userId
			              FROM  IKEP4_WF_TODO_LIST TODO
			                		INNER JOIN IKEP4_WF_PARTICIPANT PARTI
			                			ON  TODO.PROCESS_ID = PARTI.PROCESS_ID
						               AND  TODO.PROCESS_VER = PARTI.PROCESS_VER
						               AND  TODO.ACTIVITY_ID = PARTI.ACTIVITY_ID
			             WHERE  TODO.LOG_ID = #instanceLogId#
			               AND  PARTI.PARTICIPANT_TYPE = 'HUMAN'
			            UNION
			            /* 조직지정     */
			            SELECT  GRP.USER_ID AS userId
			              FROM  IKEP4_WF_TODO_LIST TODO
			              			INNER JOIN IKEP4_WF_PARTICIPANT PARTI
			              				ON  TODO.PROCESS_ID = PARTI.PROCESS_ID
						               AND  TODO.PROCESS_VER = PARTI.PROCESS_VER
						               AND  TODO.ACTIVITY_ID = PARTI.ACTIVITY_ID
						            INNER JOIN IKEP4_EV_USER_GROUP GRP
						            	ON  PARTI.PERFORMER_ID = GRP.GROUP_ID
			             WHERE  TODO.LOG_ID = #instanceLogId#
			               AND  PARTI.PARTICIPANT_TYPE = 'ORGANIZATIONAL_UNIT'
			            UNION
			            /* 역할지정     */
			            SELECT  RLE.USER_ID AS userId
			              FROM  IKEP4_WF_TODO_LIST TODO
			              			INNER JOIN IKEP4_WF_PARTICIPANT PARTI
			              				ON  TODO.PROCESS_ID = PARTI.PROCESS_ID
						               AND  TODO.PROCESS_VER = PARTI.PROCESS_VER
						               AND  TODO.ACTIVITY_ID = PARTI.ACTIVITY_ID
						            INNER JOIN IKEP4_EV_USER_ROLE RLE
						            	ON  PARTI.PERFORMER_ID = RLE.ROLE_ID
			             WHERE  TODO.LOG_ID = #instanceLogId#
			               AND  PARTI.PARTICIPANT_TYPE = 'ROLE'
			            UNION
			            /* 데이터지정    */
			            SELECT  VAR.VAR_VALUE AS userId
			              FROM  IKEP4_WF_TODO_LIST TODO
			                		INNER JOIN IKEP4_WF_PARTICIPANT PARTI
			                			ON TODO.PROCESS_ID = PARTI.PROCESS_ID
						               AND TODO.PROCESS_VER = PARTI.PROCESS_VER
						               AND TODO.ACTIVITY_ID = PARTI.ACTIVITY_ID
						            INNER JOIN IKEP4_WF_INSTANCE_VAR VAR
						            	ON TODO.INSTANCE_ID = VAR.INSTANCE_ID
						               AND PARTI.PERFORMER_ID = VAR.VAR_ID
			             WHERE  TODO.LOG_ID = #instanceLogId#
			               AND  PARTI.PARTICIPANT_TYPE = 'SYSTEM'
			            ) TBL 1
			        EXCEPT
			         SELECT MLT.PERFORMER_ID AS userId
			           FROM IKEP4_WF_MULTI_LIST MLT
			          WHERE MLT.LOG_ID = #instanceLogId#
			            AND MLT.STATE = 'COMPLETE'
			      ) TBL 2
   		]]>
   	</select>
   
   	<!-- To-Do 리스트 쿼리  -->
	<select id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.todoList" parameterClass="java.lang.String" resultClass="WorkItemBean">
      <![CDATA[ 
      			/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.todoList */
      			
		      			
			SELECT 	insLogId, instanceId, partitionId, partitionName
		                , processId, processVer, processName, activityId, activityName
		                , title, performerId, performerName, state, stateName
		                , createDate, assignDate, selectDate, dueDate
		                , varSchema, procStartDate, procEndDate, instanceAuthor, instanceAuthorName    
		                , appKey01, appKey02, appKey03, appKey04, appKey05
		                , appKey06, appKey07, appKey08, appKey09, appKey10 
		                , openDate
		          FROM (        
			          SELECT 	insLogId, instanceId, partitionId, partitionName
				                , processId, processVer, processName, activityId, activityName
				                , title, performerId, performerName, state, stateName
				                , createDate, assignDate, selectDate, dueDate
				                , varSchema, procStartDate, procEndDate, instanceAuthor, USR.USER_NAME AS instanceAuthorName    
				                , appKey01, appKey02, appKey03, appKey04, appKey05
				                , appKey06, appKey07, appKey08, appKey09, appKey10 
				                , openDate
		                        , ( SELECT count(*)
		                              FROM IKEP4_WF_DELEGATE DELE
		                             WHERE USER_ID = #userId#
		                               AND IS_SETUP = 'Y'
		                               AND START_DATE <= CURRENT_TIMESTAMP
		                               AND CURRENT_TIMESTAMP < END_DATE
		                          ) DELE_FLAG                        
				          FROM (                         
		              /* 사용자 직접 지정 퍼포머 To-do를 가져오는 쿼리 */
		            SELECT  TODO.LOG_ID AS insLogId, TODO.INSTANCE_ID AS instanceId, PROCS.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
		                , PROCS.PROCESS_ID AS processId, PROCS.PROCESS_VER AS processVer, PROCS.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName
		                , TODO.TITLE, TODO.PERFORMER_ID AS performerId, '' AS performerName, TODO.STATE AS STATE, '' AS stateName
		                , TODO.CREATE_DATE AS createDate, TODO.ASSIGN_DATE AS assignDate, TODO.SELECT_DATE AS selectDate, TODO.DUE_DATE AS dueDate
		                , '' AS varSchema, INS.CREATE_DATE AS procStartDate, INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor    
		                , INS.APP_KEY01 AS appKey01, INS.APP_KEY02 AS appKey02, INS.APP_KEY03 AS appKey03, INS.APP_KEY04 AS appKey04, INS.APP_KEY05 AS appKey05
		                , INS.APP_KEY06 AS appKey06, INS.APP_KEY07 AS appKey07, INS.APP_KEY08 AS appKey08, INS.APP_KEY09 AS appKey09, INS.APP_KEY05 AS appKey10
		                , INS.OPEN_DATE AS openDate                        
		              FROM  IKEP4_WF_TODO_LIST TODO,                                                                
		                IKEP4_WF_PROCESS PROCS
	                	LEFT JOIN IKEP4_WF_PARTITION PARTI
	                		ON PROCS.PARTITION_ID = PARTI.PARTITION_ID,
		                IKEP4_WF_INSTANCE INS,
		                (SELECT PROCESS_ID, PROCESS_VER, ACTIVITY_ID
		                   FROM IKEP4_WF_PARTICIPANT
                          WHERE PARTICIPANT_SEQ IS NOT NULL
                            AND (PARTICIPANT_TYPE = 'HUMAN' 
                            AND (PERFORMER_ID IN (
                                    SELECT USR.USER_ID AS PERFORMER_ID
                                      FROM   IKEP4_WF_DELEGATE DELE
								       right join IKEP4_EV_USER USR
								         ON USR.USER_ID = DELE.USER_ID
                                     WHERE ((DELE.MANDATOR_ID = #userId# 
                                             AND DELE.IS_SETUP = 'Y' 
                                             AND START_DATE <= CURRENT_TIMESTAMP 
                                             AND CURRENT_TIMESTAMP <= END_DATE) OR USR.USER_ID = #userId#)                 
                                )
                            OR PERFORMER_ID IS NULL))
                         ) ASGN
                     WHERE  TODO.PROCESS_ID = PROCS.PROCESS_ID 
                       AND  TODO.PROCESS_VER = PROCS.PROCESS_VER
                       AND  TODO.PROCESS_ID = ASGN.PROCESS_ID
                       AND  TODO.PROCESS_VER = ASGN.PROCESS_VER
                       AND  TODO.ACTIVITY_ID = ASGN.ACTIVITY_ID
                       AND  TODO.INSTANCE_ID = INS.INSTANCE_ID
                       AND  (TODO.PERFORMER_ID = #userId# OR TODO.PERFORMER_ID is NULL)
                       AND  PROCS.PROCESS_STATE = 'ACTIVE'
                    UNION
                    /* 사용자 조직 지정 퍼포머 To-do를 가져오는 쿼리 */
                   SELECT  TODO.LOG_ID AS insLogId, TODO.INSTANCE_ID AS instanceId, PROCS.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
                        , PROCS.PROCESS_ID AS processId, PROCS.PROCESS_VER AS processVer, PROCS.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName
                        , TODO.TITLE, TODO.PERFORMER_ID AS performerId, '' AS performerName, TODO.STATE AS STATE, '' AS stateName
                        , TODO.CREATE_DATE AS createDate, TODO.ASSIGN_DATE AS assignDate, TODO.SELECT_DATE AS selectDate, TODO.DUE_DATE AS dueDate
                        , '' AS varSchema, INS.CREATE_DATE AS procStartDate, INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor    
                        , INS.APP_KEY01 AS appKey01, INS.APP_KEY02 AS appKey02, INS.APP_KEY03 AS appKey03, INS.APP_KEY04 AS appKey04, INS.APP_KEY05 AS appKey05
                        , INS.APP_KEY06 AS appKey06, INS.APP_KEY07 AS appKey07, INS.APP_KEY08 AS appKey08, INS.APP_KEY09 AS appKey09, INS.APP_KEY10 AS appKey10
                        , INS.OPEN_DATE AS openDate                     
                    FROM      IKEP4_WF_TODO_LIST TODO,                                                                
                            IKEP4_WF_PROCESS PROCS
                           	LEFT JOIN IKEP4_WF_PARTITION PARTI
                           		 ON PROCS.PARTITION_ID = PARTI.PARTITION_ID,
                            IKEP4_WF_INSTANCE INS,
                            IKEP4_EV_USER_GROUP GRP,
                            (SELECT PROCESS_ID, PROCESS_VER, ACTIVITY_ID, PERFORMER_ID 
                               FROM IKEP4_WF_PARTICIPANT
                              WHERE PARTICIPANT_SEQ IS NOT NULL
                                AND (PARTICIPANT_TYPE = 'ORGANIZATIONAL_UNIT' AND PERFORMER_ID IS NOT NULL)
                             ) ASGN
                    WHERE  TODO.PROCESS_ID = PROCS.PROCESS_ID 
                           AND  TODO.PROCESS_VER = PROCS.PROCESS_VER
                           AND  TODO.PROCESS_ID = ASGN.PROCESS_ID
                           AND  TODO.PROCESS_VER = ASGN.PROCESS_VER
                           AND  TODO.ACTIVITY_ID = ASGN.ACTIVITY_ID
                           AND  GRP.GROUP_ID = ASGN.PERFORMER_ID 
                           AND  TODO.INSTANCE_ID = INS.INSTANCE_ID
                           AND  GRP.USER_ID IN (
                                    SELECT USR.USER_ID AS PERFORMER_ID
                                      FROM   IKEP4_WF_DELEGATE DELE
								       right join IKEP4_EV_USER USR
								         ON USR.USER_ID = DELE.USER_ID
                                     WHERE ((DELE.MANDATOR_ID = #userId# 
                                             AND DELE.IS_SETUP = 'Y' 
                                             AND START_DATE <= CURRENT_TIMESTAMP 
                                             AND CURRENT_TIMESTAMP <= END_DATE) OR USR.USER_ID = #userId#)                 
                                )           
                           AND  PROCS.PROCESS_STATE = 'ACTIVE'
                   UNION 
                    /* 사용자 ROLE 지정 퍼포머 To-do를 가져오는 쿼리 */
                   SELECT  TODO.LOG_ID AS insLogId, TODO.INSTANCE_ID AS instanceId, PROCS.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
                        , PROCS.PROCESS_ID AS processId, PROCS.PROCESS_VER AS processVer, PROCS.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName
                        , TODO.TITLE, TODO.PERFORMER_ID AS performerId, '' AS performerName, TODO.STATE AS STATE, '' AS stateName
                        , TODO.CREATE_DATE AS createDate, TODO.ASSIGN_DATE AS assignDate, TODO.SELECT_DATE AS selectDate, TODO.DUE_DATE AS dueDate
                        , '' AS varSchema, INS.CREATE_DATE AS procStartDate, INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor    
                        , INS.APP_KEY01 AS appKey01, INS.APP_KEY02 AS appKey02, INS.APP_KEY03 AS appKey03, INS.APP_KEY04 AS appKey04, INS.APP_KEY05 AS appKey05
                        , INS.APP_KEY06 AS appKey06, INS.APP_KEY07 AS appKey07, INS.APP_KEY08 AS appKey08, INS.APP_KEY09 AS appKey09, INS.APP_KEY05 AS appKey10
                        , INS.OPEN_DATE AS openDate                         
                      FROM  IKEP4_WF_TODO_LIST TODO,                                                                
                        IKEP4_WF_PROCESS PROCS
                        LEFT JOIN IKEP4_WF_PARTITION PARTI
                        	ON PROCS.PARTITION_ID = PARTI.PARTITION_ID,
                        IKEP4_WF_INSTANCE INS,
                        IKEP4_EV_USER_ROLE RLE,
                        (SELECT PROCESS_ID, PROCESS_VER, ACTIVITY_ID, PERFORMER_ID 
                           FROM IKEP4_WF_PARTICIPANT
                          WHERE PARTICIPANT_SEQ IS NOT NULL
                            AND (PARTICIPANT_TYPE = 'ROLE' AND ( PERFORMER_ID IS NOT NULL))
                         ) ASGN
                     WHERE  TODO.PROCESS_ID = PROCS.PROCESS_ID 
                       AND  TODO.PROCESS_VER = PROCS.PROCESS_VER
                       AND  TODO.PROCESS_ID = ASGN.PROCESS_ID
                       AND  TODO.PROCESS_VER = ASGN.PROCESS_VER
                       AND  TODO.ACTIVITY_ID = ASGN.ACTIVITY_ID
                       AND  RLE.ROLE_ID = ASGN.PERFORMER_ID
                       AND  RLE.USER_ID IN (
                                SELECT USR.USER_ID AS PERFORMER_ID
                                  FROM   IKEP4_WF_DELEGATE DELE
							       right join IKEP4_EV_USER USR
							         ON USR.USER_ID = DELE.USER_ID
                                 WHERE ((DELE.MANDATOR_ID = #userId# 
                                         AND DELE.IS_SETUP = 'Y' 
                                         AND START_DATE <= CURRENT_TIMESTAMP 
                                         AND CURRENT_TIMESTAMP <= END_DATE) OR USR.USER_ID = #userId#)                 
                            )
                       AND  TODO.INSTANCE_ID = INS.INSTANCE_ID
                       AND  (TODO.PERFORMER_ID = #userId# OR TODO.PERFORMER_ID is NULL) 
                       AND  PROCS.PROCESS_STATE = 'ACTIVE'       
                    UNION
                    /* 사용자 변수 지정 퍼포머 To-do를 가져오는 쿼리 */
                    SELECT  TODO.LOG_ID AS insLogId, TODO.INSTANCE_ID AS instanceId, PROCS.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
                        , PROCS.PROCESS_ID AS processId, PROCS.PROCESS_VER AS processVer, PROCS.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName
                        , TODO.TITLE, TODO.PERFORMER_ID AS performerId, '' AS performerName, TODO.STATE AS STATE, '' AS stateName
                        , TODO.CREATE_DATE AS createDate, TODO.ASSIGN_DATE AS assignDate, TODO.SELECT_DATE AS selectDate, TODO.DUE_DATE AS dueDate
                        , '' AS varSchema, INS.CREATE_DATE AS procStartDate, INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor    
                        , INS.APP_KEY01 AS appKey01, INS.APP_KEY02 AS appKey02, INS.APP_KEY03 AS appKey03, INS.APP_KEY04 AS appKey04, INS.APP_KEY05 AS appKey05
                        , INS.APP_KEY06 AS appKey06, INS.APP_KEY07 AS appKey07, INS.APP_KEY08 AS appKey08, INS.APP_KEY09 AS appKey09, INS.APP_KEY05 AS appKey10
                        , INS.OPEN_DATE AS openDate                         
                      FROM  IKEP4_WF_TODO_LIST TODO,                                                                
                        IKEP4_WF_PROCESS PROCS
                        LEFT JOIN  IKEP4_WF_PARTITION PARTI
                        	ON  PROCS.PARTITION_ID = PARTI.PARTITION_ID,
                        IKEP4_WF_INSTANCE INS,
                        (
                                    /* 사용자 변수 지정 퍼포머 To-do를 가져오는 쿼리 (단일변수)*/    
                                  SELECT DISTINCT VAR_VALUE.PROCESS_ID, VAR_VALUE.PROCESS_VER, VAR_VALUE.ACTIVITY_ID, VAR_VALUE.VAR_ID, '' AS VAR_KEY1, VAR_VALUE.VAR_KEY, VAR_VALUE.VAR_VALUE, VAR_VALUE.PERFORMER_ID, VAR_VALUE.INSTANCE_ID, VAR_VALUE.INDEX_VAR 
                                    FROM 
                                        ( 
                                         SELECT  PAR.PROCESS_ID, PAR.PROCESS_VER, PAR.ACTIVITY_ID, VAR.VAR_ID, VAR.VAR_KEY, VAR.VAR_VALUE, PAR.PERFORMER_ID, VAR.INSTANCE_ID, PAR.INDEX_VAR   
                                           FROM IKEP4_WF_PARTICIPANT PAR, IKEP4_WF_INSTANCE_VAR VAR
                                          WHERE PAR.PARTICIPANT_SEQ IS NOT NULL
                                            AND PAR.PROCESS_ID = VAR.PROCESS_ID
                                            AND PAR.PROCESS_VER = VAR.PROCESS_VER
                                            AND PAR.PERFORMER_ID = VAR.VAR_ID
                                            AND VAR.VAR_VALUE IN (
                                                    SELECT USR.USER_ID AS PERFORMER_ID
                                                      FROM   IKEP4_WF_DELEGATE DELE
												       right join IKEP4_EV_USER USR
												         ON USR.USER_ID = DELE.USER_ID
                                                     WHERE ((DELE.MANDATOR_ID = #userId# 
                                                             AND DELE.IS_SETUP = 'Y' 
                                                             AND START_DATE <= CURRENT_TIMESTAMP 
                                                             AND CURRENT_TIMESTAMP <= END_DATE) OR USR.USER_ID = #userId#)                 
                                                )
                                            AND ( ( PAR.PARTICIPANT_TYPE = 'SYSTEM' AND VAR.VAR_VALUE IS NOT NULL ) )
                                            AND PAR.INDEX_VAR IS NULL
                                        ) VAR_VALUE
                               UNION      
                                       /* 사용자 변수 지정 퍼포머 To-do를 가져오는 쿼리 (배열변수)*/                     
                                  SELECT DISTINCT VAR_VALUE.PROCESS_ID, VAR_VALUE.PROCESS_VER, VAR_VALUE.ACTIVITY_ID, VAR_VALUE.VAR_ID, IDNX_VAR.VAR_KEY AS VAR_KEY1, VAR_VALUE.VAR_KEY, VAR_VALUE.VAR_VALUE, VAR_VALUE.PERFORMER_ID, VAR_VALUE.INSTANCE_ID, VAR_VALUE.INDEX_VAR 
                                    FROM 
                                        ( 
                                         SELECT  PAR.PROCESS_ID, PAR.PROCESS_VER, PAR.ACTIVITY_ID, VAR.VAR_ID, VAR.VAR_KEY, VAR.VAR_VALUE, PAR.PERFORMER_ID, VAR.INSTANCE_ID, PAR.INDEX_VAR   
                                           FROM IKEP4_WF_PARTICIPANT PAR, IKEP4_WF_INSTANCE_VAR VAR
                                          WHERE PAR.PARTICIPANT_SEQ IS NOT NULL
                                            AND PAR.PROCESS_ID = VAR.PROCESS_ID
                                            AND PAR.PROCESS_VER = VAR.PROCESS_VER
                                            AND PAR.INDEX_VAR = VAR.VAR_ID
                                            AND ( ( PAR.PARTICIPANT_TYPE = 'SYSTEM' AND VAR.VAR_VALUE IS NOT NULL ) )
                                        ) IDNX_VAR,
                                        (
                                         SELECT  PAR.PROCESS_ID, PAR.PROCESS_VER, PAR.ACTIVITY_ID, VAR.VAR_ID, VAR.VAR_KEY, VAR.VAR_VALUE, PAR.PERFORMER_ID, VAR.INSTANCE_ID, PAR.INDEX_VAR   
                                           FROM IKEP4_WF_PARTICIPANT PAR, IKEP4_WF_INSTANCE_VAR VAR
                                          WHERE PAR.PARTICIPANT_SEQ IS NOT NULL
                                            AND PAR.PROCESS_ID = VAR.PROCESS_ID
                                            AND PAR.PROCESS_VER = VAR.PROCESS_VER
                                            AND PAR.PERFORMER_ID = VAR.VAR_ID
                                            AND VAR.VAR_VALUE IN (
                                                    SELECT USR.USER_ID AS PERFORMER_ID
                                                      FROM   IKEP4_WF_DELEGATE DELE
												       right join IKEP4_EV_USER USR
												         ON USR.USER_ID = DELE.USER_ID
                                                     WHERE ((DELE.MANDATOR_ID = #userId# 
                                                             AND DELE.IS_SETUP = 'Y' 
                                                             AND START_DATE <= CURRENT_TIMESTAMP 
                                                             AND CURRENT_TIMESTAMP <= END_DATE) OR USR.USER_ID = #userId#)                
                                                )
                                            AND ( ( PAR.PARTICIPANT_TYPE = 'SYSTEM' AND VAR.VAR_KEY IS NOT NULL ) )
                                        ) VAR_VALUE
                                   WHERE IDNX_VAR.INSTANCE_ID = VAR_VALUE.INSTANCE_ID
                                     AND IDNX_VAR.VAR_VALUE = VAR_VALUE.VAR_KEY
                                     AND IDNX_VAR.PERFORMER_ID = VAR_VALUE.PERFORMER_ID
                               UNION
									/* 단일변수에 조직ID로 지정되고 조직의 manager로 지정일 될 경우*/    
                                  SELECT DISTINCT VAR_VALUE.PROCESS_ID, VAR_VALUE.PROCESS_VER, VAR_VALUE.ACTIVITY_ID, VAR_VALUE.VAR_ID, '' AS VAR_KEY1, VAR_VALUE.VAR_KEY, VAR_VALUE.VAR_VALUE, VAR_VALUE.PERFORMER_ID, VAR_VALUE.INSTANCE_ID, VAR_VALUE.INDEX_VAR 
                                    FROM 
                                        ( 
                                         SELECT PAR.PROCESS_ID, PAR.PROCESS_VER, PAR.ACTIVITY_ID, VAR.VAR_ID, VAR.VAR_KEY, VAR.VAR_VALUE, GRP.LEADER_ID AS PERFORMER_ID, VAR.INSTANCE_ID, PAR.INDEX_VAR 
                                           FROM   IKEP4_WF_PARTICIPANT PAR
											       inner join IKEP4_WF_INSTANCE_VAR VAR
											         ON PAR.PERFORMER_ID = VAR.VAR_ID
											        AND PAR.PROCESS_VER = VAR.PROCESS_VER
											        AND PAR.PROCESS_ID = VAR.PROCESS_ID
											       inner join IKEP4_EV_GROUP GRP
											         ON GRP.GROUP_ID = VAR.VAR_VALUE
											WHERE  PAR.RULE_CONSTRAINT = 'MANAGER_OF'
											       AND GRP.LEADER_ID = #userId# 
                                        ) VAR_VALUE 
                           )  ASGN
                     WHERE  TODO.PROCESS_ID = PROCS.PROCESS_ID 
                       AND  TODO.PROCESS_VER = PROCS.PROCESS_VER
                       AND  TODO.PROCESS_ID = ASGN.PROCESS_ID
                       AND  TODO.PROCESS_VER = ASGN.PROCESS_VER
                       AND  TODO.ACTIVITY_ID = ASGN.ACTIVITY_ID
                       AND TODO.INSTANCE_ID = ASGN.INSTANCE_ID
                       AND  TODO.INSTANCE_ID = INS.INSTANCE_ID
                       AND  (TODO.PERFORMER_ID = #userId# OR TODO.PERFORMER_ID is NULL)
                       AND  PROCS.PROCESS_STATE = 'ACTIVE'
                    ) LST,
                    IKEP4_EV_USER USR
              WHERE LST.INSTANCEAUTHOR = USR.USER_ID
                AND (CURRENT_TIMESTAMP <= LST.openDate OR LST.openDate IS NULL)
            ) TEMP_TBL
	        WHERE DELE_FLAG = '0'
         ORDER BY createDate desc
            
       ]]>
   </select>  
   
   <!-- ANSI -->
	<select id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.runningList" parameterClass="java.lang.String" resultClass="WorkItemBean">
      <![CDATA[ 
      			/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.runningList */
      			
		        SELECT  insLogId, instanceId, partitionId,partitionName
		                , processId, processVer, processName, activityId, activityName, title
		                , performerId, performerName, state, stateName, createDate, assignDate
		                , selectDate, dueDate, varSchema, procStartDate
		                , procEndDate, instanceAuthor, openDate       
		          FROM (
		                /*  사용자 직접 지정      */
		                SELECT  INSLOG.LOG_ID AS insLogId, INS.INSTANCE_ID AS instanceId, PROC.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
		                        , PROC.PROCESS_ID AS processId,    PROC.PROCESS_VER AS processVer, PROC.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName, INS.TITLE AS title
		                        , '' AS performerId, '' AS performerName, INS.STATE AS state, '' AS stateName, '' AS createDate, '' AS assignDate
		                        , INSLOG.SELECT_DATE AS selectDate, INSLOG.DUE_DATE AS dueDate, '' AS varSchema, INS.CREATE_DATE AS procStartDate
		                        , INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor, INS.OPEN_DATE AS openDate                            
		                  FROM  IKEP4_WF_PARTITION PARTI
									right join IKEP4_WF_PROCESS PROC
         								ON PROC.PARTITION_ID = PARTI.PARTITION_ID 
         							inner join IKEP4_WF_INSTANCE INS
         								ON PROC.PROCESS_ID = INS.PROCESS_ID
		                   			   AND PROC.PROCESS_VER = INS.PROCESS_VER
		                   			inner join IKEP4_WF_INSTANCE_LOG INSLOG
		                   			    ON INS.INSTANCE_ID = INSLOG.INSTANCE_ID
		                   			inner join IKEP4_WF_PARTICIPANT PAR
		                   				ON PAR.PROCESS_ID = INSLOG.PROCESS_ID
					                   AND PAR.PROCESS_VER = INSLOG.PROCESS_VER
					                   AND PAR.ACTIVITY_ID = INSLOG.ACTIVITY_ID
		                        	inner join IKEP4_WF_TODO_LIST TODO
		                        		ON TODO.LOG_ID = INSLOG.LOG_ID
		                 WHERE  ((INSLOG.STATE = 'ASSIGN' AND PAR.PARTICIPANT_TYPE = 'HUMAN' AND PAR.PERFORMER_ID = #userId#))               
		                   AND  INS.STATE = 'RUNNING'
		                   AND  PROC.PROCESS_STATE = 'ACTIVE'
		              UNION
		                /*  변수지정      */
		                SELECT  INSLOG.LOG_ID AS insLogId, INS.INSTANCE_ID AS instanceId, PROC.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
		                        , PROC.PROCESS_ID AS processId,    PROC.PROCESS_VER AS processVer, PROC.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName, INS.TITLE AS title
		                        , '' AS performerId, '' AS performerName, INS.STATE AS state, '' AS stateName, '' AS createDate, '' AS assignDate
		                        , INSLOG.SELECT_DATE AS selectDate, INSLOG.DUE_DATE AS dueDate, '' AS varSchema, INS.CREATE_DATE AS procStartDate
		                        , INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor, INS.OPEN_DATE AS openDate                            
		                  FROM  IKEP4_WF_PARTITION PARTI
		                        	right join IKEP4_WF_PROCESS PROC
         								ON PROC.PARTITION_ID = PARTI.PARTITION_ID 
		                        	inner join IKEP4_WF_INSTANCE INS
		                        		ON PROC.PROCESS_ID = INS.PROCESS_ID
		                  			   AND PROC.PROCESS_VER = INS.PROCESS_VER
		                  			inner join IKEP4_WF_INSTANCE_LOG INSLOG
		                  				ON INS.INSTANCE_ID = INSLOG.INSTANCE_ID
		                  			inner join IKEP4_WF_PARTICIPANT PAR
		                  				ON PAR.PROCESS_ID = INSLOG.PROCESS_ID
					                   AND PAR.PROCESS_VER = INSLOG.PROCESS_VER
					                   AND PAR.ACTIVITY_ID = INSLOG.ACTIVITY_ID
		                        	inner join IKEP4_WF_TODO_LIST TODO
		                        		ON TODO.LOG_ID = INSLOG.LOG_ID,
									IKEP4_WF_INSTANCE_VAR VAR 
		                 WHERE  ((INSLOG.STATE = 'ASSIGN' AND PAR.PARTICIPANT_TYPE = 'SYSTEM' AND PAR.PERFORMER_ID = VAR.VAR_ID AND VAR.VAR_TYPE = 'STRING' AND VAR.VAR_VALUE = #userId#))               
		                   AND  INS.STATE = 'RUNNING'
		                   AND  PROC.PROCESS_STATE = 'ACTIVE'                   
		              UNION
		                /*  조직지정      */
		                SELECT  INSLOG.LOG_ID AS insLogId, INS.INSTANCE_ID AS instanceId, PROC.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
		                        , PROC.PROCESS_ID AS processId,    PROC.PROCESS_VER AS processVer, PROC.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName, INS.TITLE AS title
		                        , '' AS performerId, '' AS performerName, INS.STATE AS state, '' AS stateName, '' AS createDate, '' AS assignDate
		                        , INSLOG.SELECT_DATE AS selectDate, INSLOG.DUE_DATE AS dueDate, '' AS varSchema, INS.CREATE_DATE AS procStartDate
		                        , INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor, INS.OPEN_DATE AS openDate                            
		                  FROM  IKEP4_WF_PARTITION PARTI
									right join IKEP4_WF_PROCESS PROC
								    	ON PROC.PARTITION_ID = PARTI.PARTITION_ID 
			                        inner join IKEP4_WF_INSTANCE INS
			                        	ON PROC.PROCESS_ID = INS.PROCESS_ID
		                   			   AND PROC.PROCESS_VER = INS.PROCESS_VER
			                        inner join IKEP4_WF_INSTANCE_LOG INSLOG
			                        	ON INS.INSTANCE_ID = INSLOG.INSTANCE_ID
			                        inner join IKEP4_WF_PARTICIPANT PAR
			                        	ON PAR.PROCESS_ID = INSLOG.PROCESS_ID
					                   AND PAR.PROCESS_VER = INSLOG.PROCESS_VER
					                   AND PAR.ACTIVITY_ID = INSLOG.ACTIVITY_ID
			                        inner join IKEP4_WF_TODO_LIST TODO
			                        	ON TODO.LOG_ID = INSLOG.LOG_ID,
			                        IKEP4_EV_USER_GROUP USR_GRP
		                 WHERE  ((INSLOG.STATE = 'ASSIGN' AND PAR.PARTICIPANT_TYPE = 'ORGANIZATIONAL_UNIT' AND PAR.PERFORMER_ID = USR_GRP.GROUP_ID))
		                   AND  USR_GRP.USER_ID = #userId#
		                   AND  INS.STATE = 'RUNNING'
		                   AND  PROC.PROCESS_STATE = 'ACTIVE' 
		              UNION
		                /*  역할지정      */
		                SELECT  INSLOG.LOG_ID AS insLogId, INS.INSTANCE_ID AS instanceId, PROC.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
		                        , PROC.PROCESS_ID AS processId,    PROC.PROCESS_VER AS processVer, PROC.PROCESS_NAME AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName, INS.TITLE AS title
		                        , '' AS performerId, '' AS performerName, INS.STATE AS state, '' AS stateName, '' AS createDate, '' AS assignDate
		                        , INSLOG.SELECT_DATE AS selectDate, INSLOG.DUE_DATE AS dueDate, '' AS varSchema, INS.CREATE_DATE AS procStartDate
		                        , INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor, INS.OPEN_DATE AS openDate                            
		                  FROM  IKEP4_WF_PARTITION PARTI,
		                        	right join IKEP4_WF_PROCESS PROC
		                        		ON PROC.PARTITION_ID = PARTI.PARTITION_ID 
			                        inner join IKEP4_WF_INSTANCE INS
			                        	ON PROC.PROCESS_ID = INS.PROCESS_ID
		                   			   AND PROC.PROCESS_VER = INS.PROCESS_VER
			                        inner join IKEP4_WF_INSTANCE_LOG INSLOG
			                        	ON INS.INSTANCE_ID = INSLOG.INSTANCE_ID
			                        inner join IKEP4_WF_PARTICIPANT PAR
			                        	ON PAR.PROCESS_ID = INSLOG.PROCESS_ID
					                   AND PAR.PROCESS_VER = INSLOG.PROCESS_VER
					                   AND PAR.ACTIVITY_ID = INSLOG.ACTIVITY_ID
			                        inner join IKEP4_WF_TODO_LIST TODO
			                        	ON TODO.LOG_ID = INSLOG.LOG_ID,
			                        IKEP4_EV_USER_ROLE USR_RLE
		                 WHERE  ((INSLOG.STATE = 'ASSIGN' AND PAR.PARTICIPANT_TYPE = 'ROLE' AND PAR.PERFORMER_ID = USR_RLE.ROLE_ID))
		                   AND  USR_RLE.USER_ID = #userId#
		                   AND  INS.STATE = 'RUNNING'
		                   AND  PROC.PROCESS_STATE = 'ACTIVE' 
		              UNION
		                /*  완료처리된 문서      */
		                SELECT  TODO.LOG_ID AS insLogId, instanceId, partitionId,partitionName
		                        , processId, processVer, processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName, TODO.TITLE AS title
		                        , performerId, performerName, TODO.STATE AS state, stateName, createDate, assignDate
		                        , selectDate, dueDate, varSchema, procStartDate
		                        , procEndDate, instanceAuthor, openDate 
		                  FROM (
		                        SELECT  DISTINCT null AS insLogId, INS.INSTANCE_ID AS instanceId, PROC.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
		                                , PROC.PROCESS_ID AS processId,    PROC.PROCESS_VER AS processVer, PROC.PROCESS_NAME AS processName, '' AS activityId, '' AS activityName, INS.TITLE AS title
		                                , '' AS performerId, '' AS performerName, INS.STATE AS state, '' AS stateName, '' AS createDate, '' AS assignDate
		                                , INSLOG.SELECT_DATE AS selectDate, INSLOG.DUE_DATE AS dueDate, '' AS varSchema, INS.CREATE_DATE AS procStartDate
		                                , INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor, INS.OPEN_DATE AS openDate                            
		                          FROM  IKEP4_WF_PARTITION PARTI
		                          			right join IKEP4_WF_PROCESS PROC
												ON PROC.PARTITION_ID = PARTI.PARTITION_ID 
		                                	inner join IKEP4_WF_INSTANCE INS
		                                		ON PROC.PROCESS_ID = INS.PROCESS_ID
		                           			   AND PROC.PROCESS_VER = INS.PROCESS_VER
		                                	inner join IKEP4_WF_INSTANCE_LOG INSLOG
		                                		ON INS.INSTANCE_ID = INSLOG.INSTANCE_ID
		                                	inner join IKEP4_WF_PARTICIPANT PAR
		                                		ON PAR.PROCESS_ID = INS.PROCESS_ID
					                           AND PAR.PROCESS_VER = INS.PROCESS_VER
					                           AND PAR.ACTIVITY_ID = INSLOG.ACTIVITY_ID
		                         WHERE  ((INSLOG.STATE = 'COMPLETE' AND INSLOG.PERFORMER_ID = #userId#))               
		                           AND  INS.STATE = 'RUNNING'
		                           AND  PROC.PROCESS_STATE = 'ACTIVE'
		                        ) CMP,
		                        IKEP4_WF_TODO_LIST TODO
		                  WHERE CMP.instanceId = TODO.INSTANCE_ID
		               ) LST
		           WHERE (CURRENT_TIMESTAMP <= LST.openDate OR LST.openDate IS NULL)
		         ORDER BY LST.procStartDate DESC, LST.instanceId, LST.activityId 
       ]]>
   </select>   
   
   	<!-- ANSI -->
	<select id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.completedList" parameterClass="java.lang.String" resultClass="WorkItemBean">
      <![CDATA[ 
      			/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.completedList */
      			
				SELECT  '' AS insLogId, INS.INSTANCE_ID AS instanceId, PROCS.PARTITION_ID AS partitionId, PARTI.PARTITION_NAME AS partitionName
						, PROCS.PROCESS_ID AS processId,	PROCS.PROCESS_NAME AS processName, '' AS activityId, '' AS activityName, INS.TITLE AS title
						, '' AS performerId, '' AS performerName, INS.STATE AS state, '' AS stateName, '' AS createDate, '' AS assignDate
						, INSLOG.SELECT_DATE AS selectDate, INSLOG.DUE_DATE AS dueDate, '' AS varSchema, INS.CREATE_DATE AS procStartDate
						, INS.FINISHED_DATE AS procEndDate, INS.PERFORMER_ID AS instanceAuthor, INS.OPEN_DATE AS openDate 
			     FROM   IKEP4_WF_PARTITION PARTI
			     	RIGHT JOIN IKEP4_WF_PROCESS PROCS
			     		ON  PROCS.PARTITION_ID = PARTI.PARTITION_ID
			            IKEP4_WF_ACTIVITY ACT, 
			            IKEP4_WF_PARTICIPANT PAR, 
			            IKEP4_WF_INSTANCE INS, 
			            IKEP4_WF_INSTANCE_LOG INSLOG 
			    WHERE 	PROCS.PROCESS_ID = INS.PROCESS_ID 
                  AND   PROCS.PROCESS_VER = INS.PROCESS_VER
			      AND 	INS.INSTANCE_ID = INSLOG.INSTANCE_ID 
			      AND 	PAR.PROCESS_ID = INSLOG.PROCESS_ID 
                  AND   PAR.PROCESS_VER = INSLOG.PROCESS_VER
			      AND 	PAR.ACTIVITY_ID = INSLOG.ACTIVITY_ID 
			      AND 	ACT.PROCESS_ID = PAR.PROCESS_ID AND ACT.ACTIVITY_ID = PAR.ACTIVITY_ID
                  AND     (INSLOG.STATE = 'COMPLETE' AND INSLOG.PERFORMER_ID = #userId#) 
                  AND     INS.STATE = 'COMPLETE'
                  AND      PROCS.PROCESS_STATE = 'ACTIVE' 
                  AND	(CURRENT_TIMESTAMP <= INS.OPEN_DATE OR INS.OPEN_DATE IS NULL)
                ORDER BY INS.CREATE_DATE DESC      
       ]]>
   </select>   
      
   
   	<!-- ANSI -->
	<select id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.select" parameterClass="java.lang.String" resultClass="WorkItemBean">
      <![CDATA[ 
      		/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.select */
      		
			SELECT  TODO.LOG_ID AS insLogId, TODO.INSTANCE_ID AS instanceId, '' AS partitionId, '' AS partitionName, 
					INS.PROCESS_ID AS processId, INS.PROCESS_VER AS processVer, '' AS processName, TODO.ACTIVITY_ID AS activityId, TODO.ACTIVITY_NAME AS activityName,  
					TODO.TITLE AS title, TODO.PERFORMER_ID AS performerId, '' AS processName, '' AS state, '' AS stateName, 
					TODO.CREATE_DATE AS createDate, TODO.ASSIGN_DATE AS assignDate, TODO.SELECT_DATE AS selectDate, TODO.DUE_DATE AS dueDate, 
					INS.VAR_SCHEMA AS varSchema, '' AS procStartDate, '' AS procEndDate  
              FROM  IKEP4_WF_INSTANCE INS, IKEP4_WF_TODO_LIST TODO                                           
             WHERE  INS.INSTANCE_ID = TODO.INSTANCE_ID          
			   AND  TODO.LOG_ID = #insLogId#                                                     			                 			
       ]]>
   </select>    
   
   	<!-- ANSI -->
	<select id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.workform" parameterClass="com.lgcns.ikep4.workflow.engine.model.WorkItemBean" resultMap="workform">
      		/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.workform */ 
      		 
			SELECT 	TODO.LOG_ID, TODO.INSTANCE_ID, TODO.PROCESS_ID, INS.PROCESS_VER, PROCS.PROCESS_NAME, TODO.TITLE, TODO.ACTIVITY_ID, TODO.ACTIVITY_NAME, ACT.VAR_DEFINE,
			 		TODO.PERFORMER_ID, INS.VAR_SCHEMA, TODO.CREATE_DATE
			  FROM   IKEP4_WF_TODO_LIST TODO
		       left join IKEP4_WF_INSTANCE INS
		         ON TODO.INSTANCE_ID = INS.INSTANCE_ID
		       inner join IKEP4_WF_ACTIVITY ACT
		         ON TODO.ACTIVITY_ID = ACT.ACTIVITY_ID
		       inner join IKEP4_WF_PROCESS PROCS
		         ON TODO.PROCESS_ID = PROCS.PROCESS_ID
		       	AND PROCS.PROCESS_ID = ACT.PROCESS_ID                                           
			 WHERE TODO.INSTANCE_ID = #instanceId#  
			   AND TODO.LOG_ID = #insLogId#
			   <isNotEmpty property="activityId">
			   	AND TODO.ACTIVITY_ID = #activityId#
			   </isNotEmpty>
   	</select>              
    
   <!-- ANSI -->
	<delete id="com.lgcns.ikep4.workflow.engine.model.WorkItemBean.delete" parameterClass="WorkItemBean">
      <![CDATA[
      		/* [WorkList_SqlMap.xml] com.lgcns.ikep4.workflow.engine.model.WorkItemBean.delete */
      		
	       DELETE FROM IKEP4_WF_TODO_LIST
			 WHERE INSTANCE_ID = #instanceId#   
			   AND ACTIVITY_ID = #activityId#
			   AND LOG_ID = #insLogId#	
	   ]]>
	</delete>   
</sqlMap>