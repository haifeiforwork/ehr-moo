<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="collpack.collaboration.member.dao.Member">

	<typeAlias alias="Member" type="com.lgcns.ikep4.collpack.collaboration.member.model.Member" />
	<typeAlias alias="MemberSearchCondition" type="com.lgcns.ikep4.collpack.collaboration.member.search.MemberSearchCondition"/>

	<sql id="sqlColumnList">
		D.PORTAL_ID				AS portalId,
		A.WORKSPACE_ID			AS workspaceId,
		A.MEMBER_ID				AS memberId,
		A.MEMBER_INTRODUCTION	AS memberIntroduction,
		A.MEMBER_LEVEL			AS memberLevel,
		A.JOIN_APPLY_DATE		AS joinApplyDate,
		A.JOIN_DATE				AS joinDate,
		A.JOIN_TYPE				AS joinType,
		A.IS_DEFAULT			AS isDefault,	
		A.REGISTER_ID			AS registerId,
		A.REGISTER_NAME			AS registerName,
		A.REGIST_DATE			AS registDate,
		A.UPDATER_ID			AS updaterId,
		A.UPDATER_NAME			AS updaterName,
		A.UPDATE_DATE			AS updateDate,
		D.WORKSPACE_NAME		AS workspaceName,
		D.TYPE_ID				AS typeId,
		B.MAIL					AS mailId,
		B.USER_NAME				AS memberName,
		B.USER_ENGLISH_NAME		AS memberEnglishName,
		B.TEAM_NAME				AS teamName,
		B.TEAM_ENGLISH_NAME		AS teamEnglishName,
		C.JOB_TITLE_NAME		AS jobTitleName,
		C.JOB_TITLE_ENGLISH_NAME AS jobTitleEnglishName
	</sql>

	<select id="listBySearchCondition" parameterClass="MemberSearchCondition" resultClass="Member"> 
	SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.listBySearchCondition */ 
		*
	FROM 
	( 
		SELECT ROWNUM AS RNUM, A.* FROM 
		( 
			/* START========================================= */
			SELECT 
				<include refid="collpack.collaboration.member.dao.Member.sqlColumnList" /> 
			FROM   
				IKEP4_WS_MEMBER		A
				INNER JOIN IKEP4_EV_USER		B ON ( A.MEMBER_ID		=	B.USER_ID )
				INNER JOIN IKEP4_EV_JOB_TITLE	C ON ( B.JOB_TITLE_CODE	=	C.JOB_TITLE_CODE )
				INNER JOIN IKEP4_WS_WORKSPACE	D ON ( A.WORKSPACE_ID	=	D.WORKSPACE_ID )			
			WHERE	
				A.WORKSPACE_ID	=	#workspaceId#
				<isNotEmpty property="memberLevel">
				AND A.MEMBER_LEVEL	=	#memberLevel#
				</isNotEmpty>
				
				<isEmpty property="memberLevel">
				AND A.MEMBER_LEVEL	IN ('1','2','3','4')
				</isEmpty>	
				
				<isNotEmpty property="searchColumn">
				<isEqual property="searchColumn" compareValue="memberName">
				AND	( UPPER(B.USER_NAME)LIKE '%' || UPPER(#searchWord#) || '%' OR UPPER(B.USER_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%' )
				</isEqual>
				<isEqual property="searchColumn" compareValue="teamName">
				AND	( UPPER(B.TEAM_NAME) LIKE '%' || UPPER(#searchWord#) || '%' OR UPPER(B.TEAM_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%' )
				</isEqual>
				</isNotEmpty>

			ORDER BY
			<isNotEmpty property="sortColumn">
	    	<isEqual property="sortColumn" compareValue="memberName">
	    	memberName
			</isEqual>
			<isEqual property="sortColumn" compareValue="jobTitleName">
	    	jobTitleName
			</isEqual>
	    	<isEqual property="sortColumn" compareValue="teamName">
	    	teamName
			</isEqual>
			<isEqual property="sortColumn" compareValue="memberLevel">
	    	memberLevel
			</isEqual>	
			<isEqual property="sortColumn" compareValue="joinDate">
	    	joinDate
			</isEqual>
			</isNotEmpty>
	    	
			<isNotEmpty property="sortType">
	    	<isEqual property="sortType" compareValue="DESC">
	    	DESC,
			</isEqual>
			<isEqual property="sortType" compareValue="ASC">
	    	ASC,
			</isEqual>
			</isNotEmpty>
			
			<isEmpty property="sortColumn">
			A.MEMBER_LEVEL ASC,
			</isEmpty>
	    	C.SORT_ORDER ASC, B.USER_NAME ASC

			/* ===========================================END  */ 
	<![CDATA[
		) A 
		WHERE 
			ROWNUM <=  #endRowIndex# /* 종료  */
	) 
	WHERE
		RNUM >  #startRowIndex# /* 시작 */
	]]> 
	</select>  
	
	<select id="countBySearchCondition" parameterClass="MemberSearchCondition" resultClass="int">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.countBySearchCondition */ 
	          COUNT(A.MEMBER_ID)
		FROM   
			IKEP4_WS_MEMBER A
			INNER JOIN IKEP4_EV_USER 		B ON (A.MEMBER_ID		=	B.USER_ID)
			INNER JOIN IKEP4_EV_JOB_TITLE	C ON (B.JOB_TITLE_CODE	=	C.JOB_TITLE_CODE)
			INNER JOIN IKEP4_WS_WORKSPACE	D ON (A.WORKSPACE_ID	=	D.WORKSPACE_ID)
		WHERE
			A.WORKSPACE_ID	=	#workspaceId#
					
			<isNotEmpty property="memberLevel">
			AND A.MEMBER_LEVEL	=	#memberLevel#
			</isNotEmpty>
			
			<isEmpty property="memberLevel">
			AND A.MEMBER_LEVEL	IN ('1','2','3','4')
			</isEmpty>	
						
			<isNotEmpty property="searchColumn">
			<isEqual property="searchColumn" compareValue="memberName">
			AND	( UPPER(B.USER_NAME)LIKE '%' || UPPER(#searchWord#) || '%' OR UPPER(B.USER_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%' )
			</isEqual>
			<isEqual property="searchColumn" compareValue="teamName">
			AND	( UPPER(B.TEAM_NAME) LIKE '%' || UPPER(#searchWord#) || '%' OR UPPER(B.TEAM_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%' )
			</isEqual>
			</isNotEmpty>
	</select>
	
	<select id="listWorkspaceMember" parameterClass="Map" resultClass="Member"> 
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.listWorkspaceMember */ 
				<include refid="collpack.collaboration.member.dao.Member.sqlColumnList" /> 
		FROM   
			IKEP4_WS_MEMBER A
			INNER JOIN IKEP4_EV_USER 		B ON (A.MEMBER_ID		=	B.USER_ID)
			INNER JOIN IKEP4_EV_JOB_TITLE	C ON (B.JOB_TITLE_CODE	=	C.JOB_TITLE_CODE)
			INNER JOIN IKEP4_WS_WORKSPACE	D ON (A.WORKSPACE_ID	=	D.WORKSPACE_ID)				
		WHERE	
			A.WORKSPACE_ID	=	#workspaceId#
			<isNotEmpty property="memberType">
			<isEqual property="memberType" compareValue="member">
			AND A.MEMBER_LEVEL	IN ('2','3','4')
			</isEqual>
			<isEqual property="memberType" compareValue="all">
			AND A.MEMBER_LEVEL	IN ('1','2','3','4')
			</isEqual>
			<isEqual property="memberType" compareValue="associate">
			AND A.MEMBER_LEVEL	IN ('5')
			</isEqual>			
			</isNotEmpty>
    	ORDER BY C.SORT_ORDER ASC, B.USER_NAME ASC
	</select>


	<!-- create -->
	<!-- join_date 무조건 등록날짜 -->
	<!-- 승인시 재처리 및 개설자가 임의 회원 등록으로 인한 가입일지정 -->
	<insert id="create" parameterClass="Member"> 
	<![CDATA[ 
		INSERT INTO IKEP4_WS_MEMBER /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.create */
		(
			WORKSPACE_ID,	MEMBER_ID,		MEMBER_INTRODUCTION,	MEMBER_LEVEL,	JOIN_APPLY_DATE,
			JOIN_DATE,		REGISTER_ID,	REGISTER_NAME,			REGIST_DATE,
			UPDATER_ID,		UPDATER_NAME,	UPDATE_DATE,			JOIN_TYPE,	IS_DEFAULT
		)  
		VALUES
		(
			#workspaceId#,	#memberId#,		#memberIntroduction#,	#memberLevel#,	sysdate,
			sysdate,		#registerId#,	#registerName#,			sysdate,
			#updaterId#,	#updaterName#,	sysdate,				#joinType#,	#isDefault#
		)
	]]>
	</insert>	


	<!-- select -->
	<select id="get" parameterClass="Member"  resultClass="Member">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.get */
    		<include refid="collpack.collaboration.member.dao.Member.sqlColumnList" />	
		FROM 
			IKEP4_WS_MEMBER A
			INNER JOIN IKEP4_EV_USER 		B ON (A.MEMBER_ID		=	B.USER_ID)
			INNER JOIN IKEP4_EV_JOB_TITLE	C ON (B.JOB_TITLE_CODE	=	C.JOB_TITLE_CODE)
			INNER JOIN IKEP4_WS_WORKSPACE	D ON (A.WORKSPACE_ID	=	D.WORKSPACE_ID)	
		WHERE 
			A.WORKSPACE_ID		=	#workspaceId#
			AND A.MEMBER_ID		=	#memberId#
	</select>
	
	<select id="getForAlliance" parameterClass="Member"  resultClass="Member">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.getForAlliance */
    		C.WORKSPACE_ID			AS workspaceId,
			C.MEMBER_ID				AS memberId,
			C.MEMBER_INTRODUCTION	AS memberIntroduction,
			C.MEMBER_LEVEL			AS memberLevel,
			C.JOIN_APPLY_DATE		AS joinApplyDate,
			C.JOIN_DATE				AS joinDate,
			C.JOIN_TYPE				AS joinType,
			C.IS_DEFAULT			AS isDefault	
		 FROM IKEP4_WS_BOARD_ALLIANCE A
	       INNER JOIN IKEP4_WS_ALLIANCE B
	          ON A.ALLIANCE_ID = B.ALLIANCE_ID
	       INNER JOIN IKEP4_WS_MEMBER C
	          ON B.TO_WORKSPACE_ID = C.WORKSPACE_ID
	 	WHERE A.BOARD_ID = #boardId#
	 	AND C.MEMBER_ID = #memberId#
	</select>
	
	<select id="getSysopList" parameterClass="Map"  resultClass="Member">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.getSysopList */
    		A.MEMBER_ID	AS	memberId,
    		B.USER_NAME	AS	memberName,
    		B.USER_ENGLISH_NAME AS memberEnglishName,
    		B.MAIL		AS	mailId
		FROM 
			IKEP4_WS_MEMBER		A
			INNER JOIN IKEP4_EV_USER	B ON (A.MEMBER_ID = B.USER_ID AND B.MAIL IS NOT NULL)
		WHERE 
			A.MEMBER_LEVEL = '1'			
			<isNotEmpty property="workspaceIds">
			AND A.WORKSPACE_ID
			<iterate prepend="IN" property="workspaceIds" open="(" close=")" conjunction=",">
			#workspaceIds[]#
			</iterate>
			</isNotEmpty>
	</select>
	<select id="getSysop" parameterClass="String"  resultClass="Member">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.getSysop */
    		A.MEMBER_ID	AS	memberId,
    		B.USER_NAME	AS	memberName,
    		B.USER_ENGLISH_NAME AS memberEnglishName,
    		B.MAIL		AS	mailId
		FROM 
			IKEP4_WS_MEMBER		A
			INNER JOIN IKEP4_EV_USER	B ON (A.MEMBER_ID = B.USER_ID )
		WHERE 
			A.MEMBER_LEVEL = '1'			
			AND A.WORKSPACE_ID = #workspaceId#
	</select>	
	<select id="getMemberList" parameterClass="Map"  resultClass="Member">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.getMemberList */
    		A.MEMBER_ID	AS	memberId,
    		B.USER_NAME	AS	memberName,
    		B.USER_ENGLISH_NAME AS memberEnglishName,
    		B.MAIL		AS	mailId
		FROM 
			IKEP4_WS_MEMBER		A
			INNER JOIN IKEP4_EV_USER	B ON (A.MEMBER_ID = B.USER_ID AND B.MAIL IS NOT NULL)
		WHERE 
			A.WORKSPACE_ID=#workspaceId#
			AND A.MEMBER_LEVEL IN ('1','2','3','4')		
			<isNotEmpty property="memberIds">
			AND A.MEMBER_ID
			<iterate prepend="IN" property="memberIds" open="(" close=")" conjunction=",">
			#memberIds[]#
			</iterate>
			</isNotEmpty>
	</select>	
	<select id="getMemberMailList" parameterClass="String"  resultClass="Member">
	<![CDATA[ 
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.getMemberMailList */
    		A.MEMBER_ID	AS	memberId,
    		B.USER_NAME	AS	memberName,
    		B.USER_ENGLISH_NAME AS memberEnglishName,
    		B.MAIL		AS	mailId
		FROM 
			IKEP4_WS_MEMBER		A
			INNER JOIN IKEP4_EV_USER	B ON (A.MEMBER_ID = B.USER_ID AND B.MAIL IS NOT NULL)
		WHERE 
			AND A.MEMBER_LEVEL IN ('1','2','3','4')
			AND A.WORKSPACE_ID	=	#workspaceId#
			AND ROWNUM <3 /* 임시 테스트 */
	]]>
	</select>
	<select id="getEvGroup" parameterClass="Map"  resultClass="String">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.get */
    		GROUP_ID
		FROM 
			IKEP4_EV_GROUP		B
		WHERE 
			GROUP_TYPE_ID='G0002'
			AND PARENT_GROUP_ID=#workspaceId#
			AND GROUP_NAME	=	#groupName#	
	</select>
	<select id="getRootEvGroup" parameterClass="String"  resultClass="String">
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.get */
    		GROUP_ID
		FROM 
			IKEP4_EV_GROUP		B
		WHERE 
			GROUP_TYPE_ID=#groupTypeId#
			AND PARENT_GROUP_ID IS NULL
	</select>	
	<select id="exists" parameterClass="Member" resultClass="java.lang.Integer">
	<![CDATA[
		SELECT /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.exists */
			COUNT(MEMBER_ID) 
		FROM 
			IKEP4_WS_MEMBER 
		WHERE 
			WORKSPACE_ID	=	#workspaceId#
			AND MEMBER_ID	=	#memberId#
	]]>
	</select>

	

	<!-- update -->
	<!-- updateType: modify:정보수정, join:회원승인,manage:시샵을 운영진으로,level:등급변경,defaultSet:디폴트WS,defaultInit: 디폴트 초기화 -->
	<update id="update" parameterClass="Member">

		UPDATE 
			IKEP4_WS_MEMBER /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.update */
		SET 
			<isNotEmpty property="updateType">
			
			<isEqual property="updateType" compareValue="modify">		
			MEMBER_INTRODUCTION	=	#memberIntroduction#, 
			</isEqual>
			
			<isEqual property="updateType" compareValue="join">		
			MEMBER_LEVEL	=	#memberLevel#,
			JOIN_DATE		=	sysdate, 
			</isEqual>

			<isEqual property="updateType" compareValue="manage">		
			MEMBER_LEVEL	=	#memberLevel#,
			</isEqual>
			
			<isEqual property="updateType" compareValue="level">		
			MEMBER_LEVEL	=	#memberLevel#,
			</isEqual>
			
			<isEqual property="updateType" compareValue="defaultSet">		
			IS_DEFAULT		=	#isDefault#,
			</isEqual>
						
			<isEqual property="updateType" compareValue="defaultInit">		
			IS_DEFAULT		=	0,
			</isEqual>									
			</isNotEmpty>
			UPDATER_ID			=	#updaterId#,
			UPDATER_NAME		=	#updaterName#,
			UPDATE_DATE			=	sysdate
		WHERE 
			
			<isNotEmpty property="updateType">
			<isEqual property="updateType" compareValue="modify">
			WORKSPACE_ID	=	#workspaceId#	
			AND MEMBER_ID	=	#memberId#
			</isEqual>
			
			<isEqual property="updateType" compareValue="join">
			WORKSPACE_ID	=	#workspaceId#	
			AND MEMBER_ID	=	#memberId#
			</isEqual>

			<isEqual property="updateType" compareValue="manage">
			WORKSPACE_ID	=	#workspaceId#	
			AND MEMBER_LEVEL=	'1'
			</isEqual>
			
			<isEqual property="updateType" compareValue="level">
			WORKSPACE_ID	=	#workspaceId#		
			AND MEMBER_ID	=	#memberId#
			</isEqual>
			
			<isEqual property="updateType" compareValue="defaultSet">
			WORKSPACE_ID	=	#workspaceId#	
			AND MEMBER_ID	=	#memberId#
			</isEqual>
			
			<isEqual property="updateType" compareValue="defaultInit">
			MEMBER_ID		=	#memberId#		
			AND IS_DEFAULT	=	1
			AND WORKSPACE_ID IN 
			(
				SELECT
					A.WORKSPACE_ID 
				FROM
					IKEP4_WS_WORKSPACE A,
					IKEP4_WS_MEMBER B
				WHERE 
					A.PORTAL_ID = #portalId#
					AND A.WORKSPACE_ID	=	B.WORKSPACE_ID
					AND MEMBER_ID		=	#memberId#
			)
			</isEqual>			
			</isNotEmpty>			
	</update>



	<!-- delete -->
	<delete id="physicalDelete" parameterClass="Member">
	<![CDATA[
		DELETE FROM 
			IKEP4_WS_MEMBER /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.physicalDelete */
		WHERE 
			WORKSPACE_ID	=	#workspaceId# 
			AND MEMBER_ID	=	#memberId#		
	]]>
	</delete>
	
	<delete id="physicalDeleteMemberByWorkspace" parameterClass="String">
	<![CDATA[
		DELETE FROM 
			IKEP4_WS_MEMBER /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.physicalDeleteMemberByWorkspace */
		WHERE 
			WORKSPACE_ID	=	#workspaceId# 
	]]>
	</delete>	
	
	<delete id="deleteUserGroup" parameterClass="Map">
		DELETE FROM 
			IKEP4_EV_USER_GROUP /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.deleteUserGroup */
		WHERE 
			GROUP_ID	
			IN (
				SELECT GROUP_ID FROM IKEP4_EV_GROUP WHERE GROUP_TYPE_ID='G0002' AND PARENT_GROUP_ID =#workspaceId#
			)
			<isNotEmpty property="memberId">
			AND 			USER_ID	=	#memberId#
			</isNotEmpty>
	</delete>
	<delete id="deleteEvGroup" parameterClass="String">
		DELETE FROM 
			IKEP4_EV_GROUP /* [Member_SqlMap.xml] collpack.collaboration.member.dao.Member.deleteEvGroup */
		WHERE 
			GROUP_ID	
			IN (
				SELECT GROUP_ID FROM IKEP4_EV_GROUP WHERE GROUP_TYPE_ID='G0002' AND PARENT_GROUP_ID =#workspaceId#
			)
	</delete>	
</sqlMap>