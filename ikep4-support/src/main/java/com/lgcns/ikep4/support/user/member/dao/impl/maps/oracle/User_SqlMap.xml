<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="support.user.member.dao.User" >
	<typeAlias alias="User" type="com.lgcns.ikep4.support.user.member.model.User"/>
	<typeAlias alias="LocaleCode" type="com.lgcns.ikep4.support.user.code.model.LocaleCode"/>
	<typeAlias alias="Timezone" type="com.lgcns.ikep4.support.user.code.model.Timezone"/>
	<typeAlias alias="JobClass" type="com.lgcns.ikep4.support.user.code.model.JobClass"/>	
	<typeAlias alias="JobRank" type="com.lgcns.ikep4.support.user.code.model.JobRank"/>
	<typeAlias alias="JobPosition" type="com.lgcns.ikep4.support.user.code.model.JobPosition"/>
	<typeAlias alias="JobTitle" type="com.lgcns.ikep4.support.user.code.model.JobTitle"/>
	<typeAlias alias="JobDuty" type="com.lgcns.ikep4.support.user.code.model.JobDuty"/>
	<typeAlias alias="Group" type="com.lgcns.ikep4.support.user.group.model.Group"/>
	<typeAlias alias="userSearchCondition" type="com.lgcns.ikep4.support.user.member.model.UserSearchCondition"/>
	<typeAlias alias="Nation" type="com.lgcns.ikep4.support.user.code.model.Nation"/>
	
	<resultMap id="result" class="User">
		<result property="userId" column="USER_ID" />
		<result property="portalId" column="PORTAL_ID" />
		<result property="userPassword" column="USER_PASSWORD" />
		<result property="userStatus" column="USER_STATUS" />
		<result property="empNo" column="EMP_NO" />
		<result property="mail" column="MAIL" />
		<result property="mailPassword" column="MAIL_PASSWORD" />
		<result property="userName" column="USER_NAME" />
		<result property="userEnglishName" column="USER_ENGLISH_NAME" />
		<result property="teamName" column="TEAM_NAME" />
		<result property="groupId" column="GROUP_ID" />
		<result property="timezoneId" column="TIMEZONE_ID" />
		<result property="timezoneName" column="TIMEZONE_NAME" />
		<result property="mobile" column="MOBILE" />
		<result property="officePhoneNo" column="OFFICE_PHONE_NO" />
		<result property="homePhoneNo" column="HOME_PHONE_NO" />
		<result property="officeBasicAddress" column="OFFICE_BASIC_ADDRESS" />
		<result property="officeDetailAddress" column="OFFICE_DETAIL_ADDRESS" />
		<result property="officeZipcode" column="OFFICE_ZIPCODE" />
		<result property="homeBasicAddress" column="HOME_BASIC_ADDRESS" />
		<result property="homeDetailAddress" column="HOME_DETAIL_ADDRESS" />
		<result property="homeZipcode" column="HOME_ZIPCODE" />
		<result property="birthday" column="BIRTHDAY" />
		<result property="weddingAnniv" column="WEDDING_ANNIV" />
		<result property="pictureId" column="PICTURE_ID" />
		<result property="profilePictureId" column="PROFILE_PICTURE_ID" />
		<result property="leader" column="LEADER" />
		<result property="jobClassCode" column="JOB_CLASS_CODE" />
		<result property="jobClassName" column="JOB_CLASS_NAME" />
		<result property="jobRankCode" column="JOB_RANK_CODE" />
		<result property="jobRankName" column="JOB_RANK_NAME" />
		<result property="jobDutyCode" column="JOB_DUTY_CODE" />
		<result property="jobDutyName" column="JOB_DUTY_NAME" />
		<result property="jobPositionCode" column="JOB_POSITION_CODE" />
		<result property="jobPositionName" column="JOB_POSITION_NAME" />
		<result property="jobTitleCode" column="JOB_TITLE_CODE" />
		<result property="jobTitleName" column="JOB_TITLE_NAME" />
		<result property="localeCode" column="LOCALE_CODE" />
		<result property="localeName" column="LOCALE_NAME" />
		<result property="twitterAccount" column="TWITTER_ACCOUNT" />
		<result property="twitterAuthCode" column="TWITTER_AUTH_CODE" />
		<result property="facebookAccount" column="FACEBOOK_ACCOUNT" />
		<result property="facebookAuthCode" column="FACEBOOK_AUTH_CODE" />
		<result property="profileStatus" column="PROFILE_STATUS" />
		<result property="currentJob" column="CURRENT_JOB" />
		<result property="expertField" column="EXPERT_FIELD" />
		<result property="registerId" column="REGISTER_ID" />
		<result property="registerName" column="REGISTER_NAME" />
		<result property="updaterId" column="UPDATER_ID" />
		<result property="updaterName" column="UPDATER_NAME" />
		<result property="registDate" column="REGIST_DATE" />
		<result property="updateDate" column="UPDATE_DATE" />
	</resultMap>

	<resultMap id="userResult" class="User">
		<result property="userId" column="USER_ID" />
		<result property="portalId" column="PORTAL_ID" />
		<result property="userPassword" column="USER_PASSWORD" />
		<result property="userStatus" column="USER_STATUS" />
		<result property="empNo" column="EMP_NO" />
		<result property="mail" column="MAIL" />
		<result property="mailPassword" column="MAIL_PASSWORD" />
		<result property="userName" column="USER_NAME" />
		<result property="userEnglishName" column="USER_ENGLISH_NAME" />
		<result property="teamName" column="TEAM_NAME" />
		<result property="teamEnglishName" column="TEAM_ENGLISH_NAME" />
		<result property="timezoneId" column="TIMEZONE_ID" />
		<result property="timezoneName" column="TIMEZONE_NAME" />
		<result property="timezoneDescription" column="DESCRIPTION" />
		<result property="timeDifference" column="TIME_DIFFERENCE" />
		<result property="mobile" column="MOBILE" />
		<result property="officePhoneNo" column="OFFICE_PHONE_NO" />
		<result property="homePhoneNo" column="HOME_PHONE_NO" />
		<result property="officeBasicAddress" column="OFFICE_BASIC_ADDRESS" />
		<result property="officeDetailAddress" column="OFFICE_DETAIL_ADDRESS" />
		<result property="officeZipcode" column="OFFICE_ZIPCODE" />
		<result property="homeBasicAddress" column="HOME_BASIC_ADDRESS" />
		<result property="homeDetailAddress" column="HOME_DETAIL_ADDRESS" />
		<result property="homeZipcode" column="HOME_ZIPCODE" />
		<result property="birthday" column="BIRTHDAY" />
		<result property="weddingAnniv" column="WEDDING_ANNIV" />
		<result property="pictureId" column="PICTURE_ID" />
		<result property="profilePictureId" column="PROFILE_PICTURE_ID" />
		<result property="picturePath" column="PICTURE_PATH" />
		<result property="profilePicturePath" column="PROFILE_PICTURE_PATH" />
		<result property="leader" column="LEADER" />
		<result property="jobClassCode" column="JOB_CLASS_CODE" />
		<result property="jobClassName" column="JOB_CLASS_NAME" />
		<result property="jobRankCode" column="JOB_RANK_CODE" />
		<result property="jobRankName" column="JOB_RANK_NAME" />
		<result property="jobDutyCode" column="JOB_DUTY_CODE" />
		<result property="jobDutyName" column="JOB_DUTY_NAME" />
		<result property="jobPositionCode" column="JOB_POSITION_CODE" />
		<result property="jobPositionName" column="JOB_POSITION_NAME" />
		<result property="jobTitleCode" column="JOB_TITLE_CODE" />
		<result property="jobTitleName" column="JOB_TITLE_NAME" />
		<result property="jobTitleEnglishName" column="JOB_TITLE_ENGLISH_NAME" />
		<result property="localeCode" column="LOCALE_CODE" />
		<result property="localeName" column="LOCALE_NAME" />
		<result property="twitterAccount" column="TWITTER_ACCOUNT" />
		<result property="twitterAuthCode" column="TWITTER_AUTH_CODE" />
		<result property="facebookAccount" column="FACEBOOK_ACCOUNT" />
		<result property="facebookAuthCode" column="FACEBOOK_AUTH_CODE" />
		<result property="profileStatus" column="PROFILE_STATUS" />
		<result property="currentJob" column="CURRENT_JOB" />
		<result property="expertField" column="EXPERT_FIELD" />
		<result property="registerId" column="REGISTER_ID" />
		<result property="registerName" column="REGISTER_NAME" />
		<result property="updaterId" column="UPDATER_ID" />
		<result property="updaterName" column="UPDATER_NAME" />
		<result property="registDate" column="REGIST_DATE" />
		<result property="updateDate" column="UPDATE_DATE" />
		<result property="groupId" column="GROUP_ID" />
		<result property="nationCode" column="NATION_CODE" />
		<result property="nationName" column="NATION_NAME" />
		<result property="approvalPassword" column="APPROVAL_PASSWORD" />
	</resultMap>
	
	<resultMap id="resultGroupInUser" class="java.util.HashMap">
		<result property="groupId" column="GROUP_ID" />
		<result property="groupName" column="GROUP_NAME" />
		<result property="groupEnglishName" column="GROUP_ENGLISH_NAME" />
		<result property="userId" column="USER_ID" />
		<result property="isRepresentGroup" column="REPRESENT_GROUP" />
		<result property="leaderId" column="LEADER_ID" />
	</resultMap>
		
	<!-- 신규 등록 -->
	<insert id="insert" parameterClass="User"> 
	<![CDATA[
		INSERT INTO /* [User_SqlMap.xml] support.user.member.dao.User.insert */
		    IKEP4_EV_USER (
				USER_ID,
				PORTAL_ID,
				USER_PASSWORD,
				USER_STATUS,
				EMP_NO,
				MAIL,
				MAIL_PASSWORD,
				USER_NAME,
				USER_ENGLISH_NAME,
				TEAM_NAME,
				TEAM_ENGLISH_NAME,
				TIMEZONE_ID,
				MOBILE,
				OFFICE_PHONE_NO,
				HOME_PHONE_NO,
				OFFICE_BASIC_ADDRESS,
				OFFICE_DETAIL_ADDRESS,
				OFFICE_ZIPCODE,
				HOME_BASIC_ADDRESS,
				HOME_DETAIL_ADDRESS,
				HOME_ZIPCODE,
				BIRTHDAY,
				WEDDING_ANNIV,
				PICTURE_ID,
				PROFILE_PICTURE_ID,
				LEADER,
				JOB_CLASS_CODE,
				JOB_RANK_CODE,
				JOB_DUTY_CODE,
				JOB_POSITION_CODE,
				JOB_TITLE_CODE,
				LOCALE_CODE,
				TWITTER_ACCOUNT,
				TWITTER_AUTH_CODE,
				FACEBOOK_ACCOUNT,
				FACEBOOK_AUTH_CODE,
				PROFILE_STATUS,
				CURRENT_JOB,
				EXPERT_FIELD,
				REGISTER_ID,
				REGISTER_NAME,
				UPDATER_ID,
				UPDATER_NAME,
				REGIST_DATE,
				UPDATE_DATE)
		VALUES (
				#userId#,
				#portalId#,
				#userPassword#,
				#userStatus#,
				#empNo#,
				#mail#,
				#mailPassword#,
				#userName#,
				#userEnglishName#,
				#teamName#,
				#teamEnglishName#,
				#timezoneId#,
				#mobile#,
				#officePhoneNo#,
				#homePhoneNo#,
				#officeBasicAddress#,
				#officeDetailAddress#,
				#officeZipcode#,
				#homeBasicAddress#,
				#homeDetailAddress#,
				#homeZipcode#,
				#birthday#,
				#weddingAnniv#,
				#pictureId#,
				#profilePictureId#,
				#leader#,
				#jobClassCode#,
				#jobRankCode#,
				#jobDutyCode#,
				#jobPositionCode#,
				#jobTitleCode#,
				#localeCode#,
				#twitterAccount#,
				#twitterAuthCode#,
				#facebookAccount#,
				#facebookAuthCode#,
				#profileStatus#,
				#currentJob#,
				#expertField#,
				#registerId#,
				#registerName#,
				#updaterId#,
				#updaterName#,
				SYSDATE,
				SYSDATE)
	]]>
   </insert>
   
   <!-- 사용자 관리화면용 상세정보 -->
	<select id="select" parameterClass="java.lang.String" resultMap="userResult">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.select */
			A.USER_ID, A.PORTAL_ID, A.USER_PASSWORD, 
			A.USER_STATUS, A.EMP_NO, A.MAIL, 
			A.MAIL_PASSWORD, A.USER_NAME, 
			A.USER_ENGLISH_NAME, C.GROUP_ID,
			A.TEAM_NAME, 
			A.TEAM_ENGLISH_NAME AS TEAM_ENGLISH_NAME, 
			A.TIMEZONE_ID, (SELECT ITEM_MESSAGE FROM IKEP4_I18N_MESSAGE 
							WHERE ITEM_ID = A.TIMEZONE_ID 
							AND LOCALE_CODE = A.LOCALE_CODE
							AND FIELD_NAME = 'timezoneName') AS TIMEZONE_NAME
			, D.DESCRIPTION, D.TIME_DIFFERENCE, A.MOBILE,
			A.OFFICE_PHONE_NO, A.HOME_PHONE_NO, A.OFFICE_BASIC_ADDRESS,
			A.OFFICE_DETAIL_ADDRESS, A.OFFICE_ZIPCODE, A.HOME_BASIC_ADDRESS,
			A.HOME_DETAIL_ADDRESS, A.HOME_ZIPCODE, A.BIRTHDAY, A.WEDDING_ANNIV,
			A.PICTURE_ID, A.PROFILE_PICTURE_ID, A.PICTURE_PATH, A.PROFILE_PICTURE_PATH, A.LEADER, A.JOB_CLASS_CODE,
			E.JOB_CLASS_NAME, A.JOB_RANK_CODE, F.JOB_RANK_NAME, A.JOB_DUTY_CODE,
			G.JOB_DUTY_NAME, A.JOB_POSITION_CODE, H.JOB_POSITION_NAME,
			A.JOB_TITLE_CODE, I.JOB_TITLE_NAME, I.JOB_TITLE_ENGLISH_NAME, 
			A.LOCALE_CODE, (SELECT ITEM_MESSAGE FROM IKEP4_I18N_MESSAGE 
							WHERE ITEM_ID = A.LOCALE_CODE 
							AND LOCALE_CODE = A.LOCALE_CODE
							AND FIELD_NAME = 'localeName') AS LOCALE_NAME,
			A.TWITTER_ACCOUNT, A.TWITTER_AUTH_CODE, A.FACEBOOK_ACCOUNT,
			A.FACEBOOK_AUTH_CODE, A.PROFILE_STATUS, A.CURRENT_JOB, A.EXPERT_FIELD,
			A.NATION_CODE, (SELECT ITEM_MESSAGE FROM IKEP4_I18N_MESSAGE 
							WHERE ITEM_ID = A.NATION_CODE 
							AND LOCALE_CODE = A.LOCALE_CODE
							AND FIELD_NAME = 'nationName') AS NATION_NAME,
			A.APPROVAL_PASSWORD, 				
			A.REGISTER_ID, A.REGISTER_NAME, A.REGIST_DATE, A.UPDATER_ID,
			A.UPDATER_NAME, A.UPDATE_DATE
		FROM 
			IKEP4_EV_USER A LEFT OUTER JOIN
		    (
		        select 
		            A.user_id, B.group_id, B.group_name, B.group_english_name  
		          from IKEP4_EV_USER_GROUP A inner join 
		               IKEP4_EV_GROUP B on A.group_id = B.group_id
		         where A.user_id = #userId#
		           and B.group_type_id = 'G0001'
		           and A.represent_group = 1
		    ) C ON A.user_id = C.user_id LEFT OUTER JOIN
		    IKEP4_EV_TIMEZONE D ON A.TIMEZONE_ID = D.TIMEZONE_ID LEFT OUTER JOIN 
		    IKEP4_EV_JOB_CLASS E ON A.JOB_CLASS_CODE = E.JOB_CLASS_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_RANK F ON A.JOB_RANK_CODE = F.JOB_RANK_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_DUTY G ON A.JOB_DUTY_CODE = G.JOB_DUTY_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_POSITION H ON A.JOB_POSITION_CODE = H.JOB_POSITION_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_TITLE I ON A.JOB_TITLE_CODE = I.JOB_TITLE_CODE LEFT OUTER JOIN 
		    IKEP4_EV_LOCALE J ON A.LOCALE_CODE = J.LOCALE_CODE LEFT OUTER JOIN
		    IKEP4_EV_NATION K ON A.NATION_CODE = K.NATION_CODE 
		WHERE A.USER_ID = #userId#
		AND ROWNUM = 1
	]]>
	</select>
	
	<!-- 사용자 관리화면용 상세정보  부서ID를 파라미터로 받는 경우  -->
	<select id="selectByGroupId" parameterClass="Map" resultMap="userResult">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectByGroupId */
			A.USER_ID, A.PORTAL_ID, A.USER_PASSWORD, 
			A.USER_STATUS, A.EMP_NO, A.MAIL, 
			A.MAIL_PASSWORD, A.USER_NAME, 
			A.USER_ENGLISH_NAME, C.GROUP_ID,
			A.TEAM_NAME, 
			A.TEAM_ENGLISH_NAME AS TEAM_ENGLISH_NAME, 
			A.TIMEZONE_ID, (SELECT ITEM_MESSAGE FROM IKEP4_I18N_MESSAGE 
							WHERE ITEM_ID = A.TIMEZONE_ID 
							AND LOCALE_CODE = A.LOCALE_CODE
							AND FIELD_NAME = 'timezoneName') AS TIMEZONE_NAME
			, D.DESCRIPTION, D.TIME_DIFFERENCE, A.MOBILE,
			A.OFFICE_PHONE_NO, A.HOME_PHONE_NO, A.OFFICE_BASIC_ADDRESS,
			A.OFFICE_DETAIL_ADDRESS, A.OFFICE_ZIPCODE, A.HOME_BASIC_ADDRESS,
			A.HOME_DETAIL_ADDRESS, A.HOME_ZIPCODE, A.BIRTHDAY, A.WEDDING_ANNIV,
			A.PICTURE_ID, A.PROFILE_PICTURE_ID, A.PICTURE_PATH, A.PROFILE_PICTURE_PATH, A.LEADER, A.JOB_CLASS_CODE,
			E.JOB_CLASS_NAME, A.JOB_RANK_CODE, F.JOB_RANK_NAME, A.JOB_DUTY_CODE,
			G.JOB_DUTY_NAME,G.JOB_DUTY_ENGLISH_NAME, A.JOB_POSITION_CODE, H.JOB_POSITION_NAME,
			A.JOB_TITLE_CODE, I.JOB_TITLE_NAME, I.JOB_TITLE_ENGLISH_NAME, 
			A.LOCALE_CODE, (SELECT ITEM_MESSAGE FROM IKEP4_I18N_MESSAGE 
							WHERE ITEM_ID = A.LOCALE_CODE 
							AND LOCALE_CODE = A.LOCALE_CODE
							AND FIELD_NAME = 'localeName') AS LOCALE_NAME,
			A.TWITTER_ACCOUNT, A.TWITTER_AUTH_CODE, A.FACEBOOK_ACCOUNT,
			A.FACEBOOK_AUTH_CODE, A.PROFILE_STATUS, A.CURRENT_JOB, A.EXPERT_FIELD,
			A.NATION_CODE, (SELECT ITEM_MESSAGE FROM IKEP4_I18N_MESSAGE 
							WHERE ITEM_ID = A.NATION_CODE 
							AND LOCALE_CODE = A.LOCALE_CODE
							AND FIELD_NAME = 'nationName') AS NATION_NAME,
			A.APPROVAL_PASSWORD, 
			A.REGISTER_ID, A.REGISTER_NAME, A.REGIST_DATE, A.UPDATER_ID,
			A.UPDATER_NAME, A.UPDATE_DATE
		FROM 
			IKEP4_EV_USER A LEFT OUTER JOIN
		    (
		        select 
		            A.user_id, B.group_id, B.group_name, B.group_english_name  
		          from IKEP4_EV_USER_GROUP A inner join 
		               IKEP4_EV_GROUP B on A.group_id = B.group_id
		         where A.user_id = #userId#
		           and B.group_type_id = 'G0001'
		           and B.group_id = #groupId#
		    ) C ON A.user_id = C.user_id LEFT OUTER JOIN
		    IKEP4_EV_TIMEZONE D ON A.TIMEZONE_ID = D.TIMEZONE_ID LEFT OUTER JOIN 
		    IKEP4_EV_JOB_CLASS E ON A.JOB_CLASS_CODE = E.JOB_CLASS_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_RANK F ON A.JOB_RANK_CODE = F.JOB_RANK_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_DUTY G ON A.JOB_DUTY_CODE = G.JOB_DUTY_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_POSITION H ON A.JOB_POSITION_CODE = H.JOB_POSITION_CODE LEFT OUTER JOIN 
		    IKEP4_EV_JOB_TITLE I ON A.JOB_TITLE_CODE = I.JOB_TITLE_CODE LEFT OUTER JOIN 
		    IKEP4_EV_LOCALE J ON A.LOCALE_CODE = J.LOCALE_CODE LEFT OUTER JOIN
		    IKEP4_EV_NATION K ON A.NATION_CODE = K.NATION_CODE 
		WHERE A.USER_ID = #userId#
		AND ROWNUM = 1
	]]>
	</select>
	
	<!-- 해당 사용자가 속한 그룹 목록 가져오기 -->
	<select id="selectGroupForUser" parameterClass="java.lang.String" resultMap="resultGroupInUser">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectGroupForUser */
		    A.GROUP_ID,
		    B.GROUP_NAME,
		    B.GROUP_ENGLISH_NAME,
		    A.USER_ID,
		    A.REPRESENT_GROUP,
		    B.LEADER_ID 
		FROM 
			IKEP4_EV_USER_GROUP A
		    LEFT JOIN IKEP4_EV_GROUP B
		    ON A.GROUP_ID = B.GROUP_ID
		WHERE 
			A.USER_ID = #userId#
		AND B.GROUP_TYPE_ID = 'G0001'
	]]>
	</select>
	
	<select id="selectLeadingGroup" parameterClass="java.lang.String" resultClass="Group">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectLeadingGroup */
			DISTINCT(C.GROUP_ID) AS groupId, 
			C.GROUP_NAME AS groupName, 
			C.GROUP_ENGLISH_NAME AS groupEnglishName
		FROM 
			IKEP4_EV_USER A
			LEFT JOIN IKEP4_EV_USER_GROUP B
			ON A.USER_ID = B.USER_ID
			LEFT JOIN IKEP4_EV_GROUP C
			ON B.GROUP_ID = C.GROUP_ID
		WHERE 
			C.LEADER_ID = #userId#	
			AND ROWNUM = 1
	]]>
	</select>
	
	<select id="selectLeadingGroupAll" parameterClass="java.lang.String" resultClass="Group">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectLeadingGroup */
			DISTINCT(C.GROUP_ID) AS groupId, 
			C.GROUP_NAME AS groupName, 
			C.GROUP_ENGLISH_NAME AS groupEnglishName
		FROM 
			IKEP4_EV_USER A
			LEFT JOIN IKEP4_EV_USER_GROUP B
			ON A.USER_ID = B.USER_ID
			LEFT JOIN IKEP4_EV_GROUP C
			ON B.GROUP_ID = C.GROUP_ID
		WHERE 
			C.LEADER_ID = #userId#	
	]]>
	</select>
	
	<!-- My Personal Info 수정 -->
	<update id="updateMyPsInfo" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateMyPsInfo */
		    IKEP4_EV_USER
		SET
			USER_PASSWORD = #userPassword#,
			BIRTHDAY = #birthday#,
			WEDDING_ANNIV = #weddingAnniv#,
		    HOME_PHONE_NO = #homePhoneNo#,
		    HOME_ZIPCODE = #homeZipcode#,
		    HOME_BASIC_ADDRESS = #homeBasicAddress#,
		    HOME_DETAIL_ADDRESS = #homeDetailAddress#,
		    UPDATER_ID = #updaterId#,
		    UPDATER_NAME = #updaterName#,
		    UPDATE_DATE = SYSDATE
		WHERE USER_ID = #userId#
	]]>
	</update>
	
	<!-- 기존 정보 수정 -->
	<update id="update" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.update */
		    IKEP4_EV_USER
		SET
		    PORTAL_ID = #portalId#,
		    USER_STATUS = #userStatus#,
		    EMP_NO = #empNo#,
		    MAIL = #mail#,
		    MAIL_PASSWORD = #mailPassword#,
		    USER_NAME = #userName#,
		    USER_ENGLISH_NAME = #userEnglishName#,
		    USER_PASSWORD = #userPassword#,
		    TEAM_NAME = #teamName#,
		    TEAM_ENGLISH_NAME = #teamEnglishName#,
		    TIMEZONE_ID = #timezoneId#,
		    NATION_CODE = #nationCode#,
		    MOBILE = #mobile#,
		    OFFICE_PHONE_NO = #officePhoneNo#,
		    HOME_PHONE_NO = #homePhoneNo#,
		    OFFICE_BASIC_ADDRESS = #officeBasicAddress#,
		    OFFICE_DETAIL_ADDRESS = #officeDetailAddress#,
		    OFFICE_ZIPCODE = #officeZipcode#,
		    HOME_BASIC_ADDRESS = #homeBasicAddress#,
		    HOME_DETAIL_ADDRESS = #homeDetailAddress#,
		    HOME_ZIPCODE = #homeZipcode#,
		    BIRTHDAY = #birthday#,
		    WEDDING_ANNIV = #weddingAnniv#,
		    PICTURE_ID = #pictureId#,
		    PROFILE_PICTURE_ID = #profilePictureId#,
		    LEADER = #leader#,
		    JOB_CLASS_CODE = #jobClassCode#,
		    JOB_RANK_CODE = #jobRankCode#,
		    JOB_DUTY_CODE = #jobDutyCode#,
		    JOB_POSITION_CODE = #jobPositionCode#,
		    JOB_TITLE_CODE = #jobTitleCode#,
		    LOCALE_CODE = #localeCode#,
			TWITTER_ACCOUNT = #twitterAccount#,
			TWITTER_AUTH_CODE = #twitterAuthCode#,
			FACEBOOK_ACCOUNT = #facebookAccount#,
			FACEBOOK_AUTH_CODE = #facebookAuthCode#,
			PROFILE_STATUS = #profileStatus#,
			CURRENT_JOB = #currentJob#,
			EXPERT_FIELD = #expertField#,
		    UPDATER_ID = #updaterId#,
		    UPDATER_NAME = #updaterName#,
		    UPDATE_DATE = SYSDATE
		WHERE  
			USER_ID = #userId#
	]]>
	</update>
	
	<update id="updateLeaderInfo" parameterClass="java.lang.String">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateLeaderInfo */
			IKEP4_EV_GROUP
		SET
		    LEADER_ID = ''
		WHERE
		    GROUP_ID = #groupId#
	]]>
	</update>
   
	<!-- 삭제 -->
	<delete id="delete" parameterClass="java.lang.String">
	<![CDATA[
		DELETE FROM /* [User_SqlMap.xml] support.user.member.dao.User.delete */
			IKEP4_EV_USER
		WHERE
			USER_ID = #id#
	]]>
	</delete>
	
	<!-- UserID 중복 체크 -->
	<select id="checkId" parameterClass="java.lang.String" resultClass="java.lang.String">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.checkId */
			COUNT(USER_ID)
		FROM
			IKEP4_EV_USER
		WHERE
			USER_ID = #userId#
	]]>
	</select>
	
	<!-- 중복 Group 체크 -->
	<select id="checkGroup" parameterClass="User" resultClass="java.lang.String">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.checkGroup */
			COUNT(GROUP_ID) 
		FROM 
			IKEP4_EV_USER_GROUP
		WHERE 
			USER_ID = #userId#
			AND GROUP_ID = #groupId#
	]]>
	</select>
	
	<!-- UserID 목록 가져오기 -->
	<select id="selectUserAll" resultClass="User">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectUserAll */
			USER_ID AS USERID, 
			USER_NAME AS USERNAME
		FROM
			IKEP4_EV_USER
		ORDER BY USER_ID DESC
	]]>
	</select>
	
	<!-- LocaleCode 목록 가져오기 -->
	<select id="selectLocaleCodeAll" parameterClass="java.lang.String" resultClass="LocaleCode">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectLocaleCodeAll */
			A.LOCALE_CODE AS LOCALECODE, 
			B.ITEM_MESSAGE AS LOCALENAME
		FROM IKEP4_EV_LOCALE A
			JOIN IKEP4_I18N_MESSAGE B
			ON A.LOCALE_CODE = B.ITEM_ID
		WHERE B.LOCALE_CODE = #localeCode#
		ORDER BY A.SORT_ORDER
	]]>
	</select>
	
	<!-- Timezone 목록 가져오기 -->
	<select id="selectTimezoneAll" parameterClass="java.lang.String" resultClass="Timezone">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectTimezoneAll */
			A.TIMEZONE_ID AS TIMEZONEID, 
			B.ITEM_MESSAGE AS TIMEZONENAME,
            A.DISPLAY_NAME AS DISPLAYNAME
		FROM IKEP4_EV_TIMEZONE A
			JOIN IKEP4_I18N_MESSAGE B
			ON A.TIMEZONE_ID = B.ITEM_ID
		WHERE B.LOCALE_CODE = #localeCode#
		ORDER BY A.SORT_ORDER
	]]>
	</select>
	
	<!-- 국가 목록 가져오기 -->
	<select id="selectNationAll" parameterClass="java.lang.String" resultClass="Nation">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectNationAll */
			A.NATION_CODE AS NATIONCODE, 
			B.ITEM_MESSAGE AS NATIONNAME
		FROM IKEP4_EV_NATION A
			JOIN IKEP4_I18N_MESSAGE B
			ON A.NATION_CODE = B.ITEM_ID
		WHERE B.LOCALE_CODE = #localeCode#
		ORDER BY A.NATION_CODE
	]]>
	</select>
	
	<!-- JobClassCode 목록 가져오기 -->
	<select id="selectJobClassAll" parameterClass="java.lang.String" resultClass="JobClass">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectJobClassAll */
			JOB_CLASS_CODE AS jobClassCode, 
			JOB_CLASS_NAME AS jobClassName,
			JOB_CLASS_ENGLISH_NAME AS jobClassEnglishName
		FROM
			IKEP4_EV_JOB_CLASS
	    WHERE PORTAL_ID = #portalId#
		ORDER BY JOB_CLASS_CODE ASC
	]]>
	</select>
	
	<!-- JobRankCode 목록 가져오기 -->
	<select id="selectJobRankAll" parameterClass="java.lang.String" resultClass="JobRank">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectJobRankAll */
			JOB_RANK_CODE AS JOBRANKCODE, 
			JOB_RANK_NAME AS JOBRANKNAME,
			JOB_RANK_ENGLISH_NAME AS JOBRANKENGLISHNAME
		FROM
			IKEP4_EV_JOB_RANK
		WHERE PORTAL_ID = #portalId#
		ORDER BY JOB_RANK_CODE DESC
	]]>
	</select>

	<!-- JobPositionCode 목록 가져오기 -->
	<select id="selectJobPositionAll" parameterClass="java.lang.String" resultClass="JobPosition">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectJobPositionAll */
			JOB_POSITION_CODE AS JOBPOSITIONCODE, 
			JOB_POSITION_NAME AS JOBPOSITIONNAME,
			JOB_POSITION_ENGLISH_NAME AS JOBPOSITIONENGLISHNAME
		FROM
			IKEP4_EV_JOB_POSITION
		WHERE PORTAL_ID = #portalId#
		ORDER BY JOB_POSITION_CODE DESC
	]]>
	</select>

	<!-- JobTItleCode 목록 가져오기 -->
	<select id="selectJobTitleAll" parameterClass="java.lang.String" resultClass="JobTitle">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectJobTitleAll */
			JOB_TITLE_CODE AS JOBTITLECODE, 
			JOB_TITLE_NAME AS JOBTITLENAME,
			JOB_TITLE_ENGLISH_NAME AS JOBTITLEENGLISHNAME
		FROM
			IKEP4_EV_JOB_TITLE
		WHERE PORTAL_ID = #portalId#
		ORDER BY JOB_TITLE_CODE DESC
	]]>
	</select>

	<!-- JobDutyCode 목록 가져오기 -->
	<select id="selectJobDutyAll" parameterClass="java.lang.String" resultClass="JobDuty">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectJobDutyAll */
			JOB_DUTY_CODE AS JOBDUTYCODE, 
			JOB_DUTY_NAME AS JOBDUTYNAME,
			JOB_DUTY_ENGLISH_NAME AS JOBDUTYENGLISHNAME
		FROM
			IKEP4_EV_JOB_DUTY
		WHERE PORTAL_ID = #portalId#
		ORDER BY JOB_DUTY_CODE DESC
	]]>
	</select>
	
	<!-- 사용자를 그룹에 추가함 -->
	<insert id="addUserToGroup" parameterClass="User">
	<![CDATA[
		INSERT INTO /* [User_SqlMap.xml] support.user.member.dao.User.addUserToGroup */
		    IKEP4_EV_USER_GROUP (
		        GROUP_ID, 
		        USER_ID, 
		        REGISTER_ID, 
		        REGISTER_NAME, 
		        UPDATER_ID, 
		        UPDATER_NAME, 
		        REGIST_DATE, 
		        UPDATE_DATE,
		        REPRESENT_GROUP) 
		VALUES (
				#groupId#,
				#userId#,
				#registerId#,
				#registerName#,
				#updaterId#,
				#updaterName#,
				SYSDATE,
				SYSDATE,
				0)
	]]>
	</insert>
	
	<update id="updateRepresentGroup" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateRepresentGroup */
			IKEP4_EV_USER_GROUP
		SET
			REPRESENT_GROUP = #isRepresentGroup#
		WHERE
			USER_ID = #userId#
		AND GROUP_ID = #groupId#
	]]>
	</update>

	<!-- 사용자의 그룹 정보를 수정 -->
	<update id="updateUserToGroup" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateUserToGroup */
		    IKEP4_EV_USER_GROUP
		SET
		    GROUP_ID = #groupId#,
		    UPDATER_ID = #updaterId#,
		    UPDATER_NAME = #updaterName#,
		    UPDATE_DATE = SYSDATE
		WHERE
		    USER_ID = #userId#
	]]>
	</update>
	
	<!-- 사용자를 그룹에서 제거함 -->
	<delete id="removeUserFromGroup" parameterClass="java.lang.String">
	<![CDATA[
		DELETE /* [User_SqlMap.xml] support.user.member.dao.User.removeUserFromGroup */
			FROM IKEP4_EV_USER_GROUP
		WHERE 
			GROUP_ID = #groupId#
	]]>
	</delete>
	
	<!-- USER_GROUP에 매핑된 특정그룹 사용자 정보 삭제 -->
	<delete id="removeUserFromCertainGroup" parameterClass="User">
	<![CDATA[
		DELETE /* [User_SqlMap.xml] support.user.member.dao.User.removeUserFromCertainGroup */
			FROM IKEP4_EV_USER_GROUP
		WHERE 
			USER_ID = #userId#
		AND GROUP_ID = #groupId#
	]]>
	</delete>
	
	<!-- USER_ROLE에 매핑된 전체 그룹 사용자 정보 삭제 -->
	<delete id="deleteUserFromGroup" parameterClass="java.lang.String">
	<![CDATA[
		DELETE /* [User_SqlMap.xml] support.user.member.dao.User.deleteUserFromGroup */
			FROM IKEP4_EV_USER_GROUP
		WHERE 
			USER_ID = #userId#
	]]>
	</delete>
	
	<!-- USER_ROLE에 매핑된 사용자 정보 삭제 -->
	<delete id="deleteUserFromRole" parameterClass="java.lang.String">
	<![CDATA[
		DELETE /* [User_SqlMap.xml] support.user.member.dao.User.deleteUserFromGroup */
			FROM IKEP4_EV_USER_ROLE
		WHERE 
			USER_ID = #userId#
	]]>
	</delete>
	
	<!-- USER_SYS_PERMISSION에 매핑된 사용자 정보 삭제 -->
	<delete id="deleteUserFromSysPermission" parameterClass="java.lang.String">
	<![CDATA[
		DELETE /* [User_SqlMap.xml] support.user.member.dao.User.deleteUserFromSysPermission */
			FROM IKEP4_EV_USER_SYS_PERMISSION
		WHERE 
			USER_ID = #userId#
	]]>
	</delete>
	
	<!-- USER_CON_PERMISSION에 매핑된 사용자 정보 삭제 -->
	<delete id="deleteUserFromConPermission" parameterClass="java.lang.String">
	<![CDATA[
		DELETE /* [User_SqlMap.xml] support.user.member.dao.User.deleteUserFromConPermission */
			FROM IKEP4_EV_USER_CON_PERMISSION
		WHERE 
			USER_ID = #userId#
	]]>
	</delete>
	
	<!-- USER_ABSENCE에 매핑된 사용자 정보 삭제 -->
	<delete id="deleteUserFromAbsence" parameterClass="java.lang.String">
	<![CDATA[
		DELETE /* [User_SqlMap.xml] support.user.member.dao.User.deleteUserFromAbsence */
			FROM IKEP4_EV_USER_ABSENCE
		WHERE 
			USER_ID = #userId#
	]]>
	</delete>
	
	<resultMap id="resultForTree" class="User">
		<result property="userId" column="USER_ID" />
		<result property="empNo" column="EMP_NO" />
		<result property="mail" column="MAIL" />
		<result property="userName" column="USER_NAME" />
		<result property="userEnglishName" column="USER_ENGLISH_NAME" />
		<result property="teamName" column="TEAM_NAME" />
		<result property="teamEnglishName" column="TEAM_ENGLISH_NAME" />
		<result property="leader" column="LEADER" />
		<result property="groupId" column="GROUP_ID" />
		<result property="mobile" column="MOBILE" />
		<result property="officePhoneNo" column="OFFICE_PHONE_NO" />
		<result property="homePhoneNo" column="HOME_PHONE_NO" />
		<result property="jobTitleCode" column="JOB_TITLE_CODE" />
		<result property="jobTitleName" column="JOB_TITLE_NAME" />
		<result property="jobTitleEnglishName" column="JOB_TITLE_ENGLISH_NAME" />
	</resultMap>
	
	<!-- 조직도용 사용자 조회 -->
	<select id="selectAllForTree" parameterClass="java.util.Map" resultMap="resultForTree">
			SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectAllForTree */
			       A.USER_ID AS USER_ID,
			       A.EMP_NO AS EMP_NO,
			       A.MAIL AS MAIL,
			       A.USER_NAME AS USER_NAME,
			       A.USER_ENGLISH_NAME AS USER_ENGLISH_NAME,
			       C.GROUP_NAME TEAM_NAME,
			        C.GROUP_ENGLISH_NAME TEAM_ENGLISH_NAME,
			       A.LEADER,
			       B.GROUP_ID AS GROUP_ID,
			       A.MOBILE AS MOBILE,
			       A.OFFICE_PHONE_NO AS OFFICE_PHONE_NO,
			       A.HOME_PHONE_NO AS HOME_PHONE_NO,
			       D.JOB_TITLE_CODE,
			       D.JOB_TITLE_NAME,
			       D.JOB_TITLE_ENGLISH_NAME
			  FROM IKEP4_EV_USER A JOIN IKEP4_EV_USER_GROUP B
			  		ON A.USER_ID = B.USER_ID
			  		JOIN
			  		(SELECT PARENT_GROUP_ID, GROUP_ID, GROUP_NAME, GROUP_ENGLISH_NAME
			          FROM IKEP4_EV_GROUP
			         WHERE GROUP_TYPE_ID = 'G0001'
			         AND PORTAL_ID = #portalId#
			         	<dynamic>
			         		<isNotEmpty property="groupId" prepend="AND">
								GROUP_ID = #groupId#
							</isNotEmpty>
							<isEmpty property="groupId">
								START WITH GROUP_ID = (SELECT GROUP_ID
														FROM IKEP4_EV_GROUP
														WHERE PORTAL_ID = #portalId#
														AND GROUP_ID = (SELECT GROUP_ID
										                                   FROM (SELECT A.GROUP_ID AS GROUP_ID, ROWNUM AS NUM
										                                           FROM IKEP4_EV_USER_GROUP A, IKEP4_EV_GROUP B
										                                           WHERE A.USER_ID = #userId# AND A.REPRESENT_GROUP = 1
										                                           AND B.PORTAL_ID = #portalId#
										                                           /* 아래 그룹타입ID는 부서타입 ID로 고정 */
										                                           AND B.GROUP_TYPE_ID = 'G0001'
										                                           AND A.GROUP_ID = B.GROUP_ID
										                                           AND ROWNUM = 1 )
										                                   WHERE NUM = 1))
				                CONNECT BY   GROUP_ID =  PRIOR PARENT_GROUP_ID
							</isEmpty>
						</dynamic>
			    
			     	) C
			     	ON B.GROUP_ID = C.GROUP_ID
			     	JOIN IKEP4_EV_JOB_TITLE D
					ON	A.JOB_TITLE_CODE = D.JOB_TITLE_CODE
			 WHERE A.USER_STATUS != 'T'
			 <isNotEmpty property="portalId">
				AND A.PORTAL_ID = #portalId#
			</isNotEmpty>
			 ORDER BY A.LEADER DESC, A.JOB_TITLE_CODE, A.USER_NAME
		
	</select>
	
	<!-- 조직도용 사용자 이름으로 검색 -->
	<select id="selectSearchForTree" parameterClass="java.util.Map" resultMap="resultForTree">
	<![CDATA[
		SELECT /* [User_SqlMap.xml] support.user.member.dao.User.selectSearchForTree */ 
			 	   A.USER_ID AS USER_ID,
			       A.EMP_NO AS EMP_NO,
			       A.MAIL AS MAIL,
			       A.USER_NAME AS USER_NAME,
			       A.USER_ENGLISH_NAME AS USER_ENGLISH_NAME,
			       A.TEAM_NAME,
			       A.TEAM_ENGLISH_NAME,
			       A.LEADER,
			       B.GROUP_ID AS GROUP_ID,
			       A.MOBILE AS MOBILE,
			       A.OFFICE_PHONE_NO AS OFFICE_PHONE_NO,
			       A.HOME_PHONE_NO AS HOME_PHONE_NO,
			       A.JOB_TITLE_CODE,
			       D.JOB_TITLE_NAME,
			       D.JOB_TITLE_ENGLISH_NAME
		FROM 
					IKEP4_EV_USER A JOIN IKEP4_EV_USER_GROUP B
					ON A.USER_ID = B.USER_ID
					JOIN IKEP4_EV_JOB_TITLE D
					ON	A.JOB_TITLE_CODE = D.JOB_TITLE_CODE
			WHERE 1=1
				AND A.USER_STATUS != 'T'
				AND B.REPRESENT_GROUP = '1'
		]]>
		<dynamic>
				<isNotEmpty property="portalId">
					AND A.PORTAL_ID = #portalId#
				</isNotEmpty>
				<isNotNull property="userName" prepend="AND">
					(UPPER(A.USER_ID) LIKE '%' || UPPER(#userName#) || '%' 
						OR UPPER(A.USER_NAME) LIKE '%' || UPPER(#userName#) || '%'
						OR UPPER(A.USER_ENGLISH_NAME) LIKE '%' || UPPER(#userName#) || '%')
				</isNotNull>
		</dynamic>
		 ORDER BY A.LEADER DESC, A.JOB_TITLE_CODE, A.USER_NAME
		
	</select>
	
	<!-- 프로 파일 기존 정보 수정 -->
	<update id="updateProfile" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateProfile */
		    IKEP4_EV_USER
		SET
		    TIMEZONE_ID = #timezoneId#,
		    MOBILE = #mobile#,
		    MAIL = #mail#,
		    MAIL_PASSWORD = #mailPassword#,
		    OFFICE_PHONE_NO = #officePhoneNo#,
		    OFFICE_BASIC_ADDRESS = #officeBasicAddress#,
		    OFFICE_DETAIL_ADDRESS = #officeDetailAddress#,
		    LOCALE_CODE = #localeCode#,
		    NATION_CODE = #nationCode#,
		    UPDATER_ID = #updaterId#,
		    UPDATER_NAME = #updaterName#,
		    CURRENT_JOB = #currentJob#,
		    UPDATE_DATE = SYSDATE
		WHERE USER_ID = #userId#
	]]>
	</update>
	
	<!-- update ProfileStatus -->
	<update id="updateProfileStatus" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateProfileStatus */  
			IKEP4_EV_USER 
		SET 
			PROFILE_STATUS = #profileStatus#, 
			UPDATER_ID = #updaterId#,
			UPDATER_NAME = #updaterName#,
			UPDATE_DATE = SYSDATE
		WHERE 
			USER_ID = #userId#
	]]>
	</update>
	
	<!-- update PictureId -->
	<update id="updatePictureId" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updatePictureId */  
			IKEP4_EV_USER 
		SET 
			PICTURE_ID = #pictureId#,
			UPDATER_ID = #updaterId#,
			UPDATER_NAME = #updaterName#,
			UPDATE_DATE = SYSDATE
		WHERE 
			USER_ID = #userId#
	]]>
	</update>
	
	<!-- update ProfilePictureId -->
	<update id="updateProfilePictureId" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateProfilePictureId */  
			IKEP4_EV_USER 
		SET 
			PROFILE_PICTURE_ID = #profilePictureId#,
			UPDATER_ID = #updaterId#,
			UPDATER_NAME = #updaterName#,
			UPDATE_DATE = SYSDATE
		WHERE 
			USER_ID = #userId#
	]]>
	</update>
	
		<!-- update TwitterInfo -->
	<update id="updateTwitterInfo" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateTwitterInfo */  
			IKEP4_EV_USER 
		SET 
			TWITTER_ACCOUNT = #twitterAccount#, 
			TWITTER_AUTH_CODE = #twitterAuthCode#, 
			UPDATER_ID = #updaterId#,
			UPDATER_NAME = #updaterName#,
			UPDATE_DATE = SYSDATE
		WHERE 
			USER_ID = #userId#
	]]>
	</update>
	
		<!-- update FacebookInfo -->
	<update id="updateFacebookInfo" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateFacebookInfo */ 
			IKEP4_EV_USER 
		SET 
			FACEBOOK_ACCOUNT = #facebookAccount#, 
			FACEBOOK_AUTH_CODE = #facebookAuthCode#, 
			UPDATER_ID = #updaterId#,
			UPDATER_NAME = #updaterName#,
			UPDATE_DATE = SYSDATE
		WHERE 
			USER_ID = #userId#
	]]>
	</update>
	
	<!-- updateExportField -->
	<update id="updateExportField" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateExportField */  
			IKEP4_EV_USER 
		SET 
			EXPERT_FIELD = #expertField#, 
			UPDATER_ID = #updaterId#,
			UPDATER_NAME = #updaterName#,
			UPDATE_DATE = SYSDATE
		WHERE 
			USER_ID = #userId#
	]]>
	</update>
	
	<!-- updateCurrentJob -->
	<update id="updateCurrentJob" parameterClass="User">
	<![CDATA[
		UPDATE /* [User_SqlMap.xml] support.user.member.dao.User.updateCurrentJob */  
			IKEP4_EV_USER 
		SET 
			CURRENT_JOB = #currentJob#, 
			UPDATER_ID = #updaterId#,
			UPDATER_NAME = #updaterName#,
			UPDATE_DATE = SYSDATE
		WHERE 
			USER_ID = #userId#
	]]>
	</update>
	
	<select id="selectAllBySearchCondition" parameterClass="userSearchCondition" resultClass="User">    	
    	SELECT /* [User_SqlMap.xml] selectAllBySearchCondition */ 
		       *
		FROM ( 
		     SELECT ROWNUM AS RNUM, A.* FROM ( 
		         /* START========================================= */
		         SELECT
						A.USER_ID userId,
						A.EMP_NO empNo,
						A.MAIL mail,
						A.USER_NAME userName,
						A.USER_ENGLISH_NAME userEnglishName,
						A.MOBILE mobile,
						A.LEADER leader,
						A.OFFICE_PHONE_NO officePhoneNo, 
						D.JOB_TITLE_NAME jobTitleName,
						D.JOB_TITLE_ENGLISH_NAME jobTitleEnglishName,
						C.GROUP_ID groupId,
						C.GROUP_NAME teamName,
						C.GROUP_ENGLISH_NAME teamEnglishName
					FROM IKEP4_EV_USER A LEFT OUTER JOIN
					    (
					      select 
					          F.user_id, B.group_id, B.group_name, B.group_english_name  
					          from IKEP4_EV_USER_GROUP F inner join 
					               IKEP4_EV_GROUP B on F.group_id = B.group_id
					         where F.group_id = B.group_id
					         <isNotEmpty property="groupTypeId">
					           and B.group_type_id = #groupTypeId#
					         </isNotEmpty>
					    ) C ON A.user_id = C.user_id
						LEFT OUTER JOIN IKEP4_EV_JOB_TITLE D ON A.JOB_TITLE_CODE = D.JOB_TITLE_CODE
				 	WHERE 1=1
					<isNotEmpty property="searchWord">
						<isEqual property="searchColumn" compareValue="title">
							AND	(UPPER(A.USER_ID) LIKE '%' || UPPER(#searchWord#) || '%' 
								OR UPPER(A.USER_NAME) LIKE '%' || UPPER(#searchWord#) || '%' 
								OR UPPER(A.USER_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%')
						</isEqual>
						<isEqual property="searchColumn" compareValue="id">
							AND	A.USER_ID LIKE '%' || #searchWord# || '%'
						</isEqual>
						<isEqual property="searchColumn" compareValue="team">
							AND (UPPER(A.TEAM_NAME) LIKE '%' || UPPER(#searchWord#) || '%' 
								OR UPPER(A.TEAM_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%')
						</isEqual>
					</isNotEmpty>
					<isNotEmpty property="portalId">
							AND A.PORTAL_ID = #portalId#
					</isNotEmpty>
					<isEmpty property="isAllUser">
							AND A.USER_STATUS = 'C'
					</isEmpty>
					<isNotEmpty property="groupId">
						AND C.GROUP_ID = #groupId#
					</isNotEmpty>
				    <isNotEmpty property="sortColumn" >
				    	<isEqual property="sortColumn" compareValue="USER_ID">
				    		<isEqual property="sortType" compareValue="ASC">
				    			ORDER BY A.USER_ID ASC, A.LEADER DESC, D.SORT_ORDER ASC
				    		</isEqual>
				    		<isEqual property="sortType" compareValue="DESC">
				    			ORDER BY A.USER_ID DESC, A.LEADER DESC, D.SORT_ORDER ASC
				    		</isEqual>
				    	</isEqual>
				    	<isEqual property="sortColumn" compareValue="USER_NAME">
				    		<isEqual property="userLocaleCode" compareValue="ko">
					    		<isEqual property="sortType" compareValue="ASC">
					    			ORDER BY A.USER_NAME ASC, A.LEADER DESC, D.SORT_ORDER ASC
					    		</isEqual>
					    		<isEqual property="sortType" compareValue="DESC">
					    			ORDER BY A.USER_NAME DESC, A.LEADER DESC, D.SORT_ORDER ASC
					    		</isEqual>
					    	</isEqual>
					    	<isNotEqual property="userLocaleCode" compareValue="ko">
					    		<isEqual property="sortType" compareValue="ASC">
					    			ORDER BY A.USER_ENGLISH_NAME ASC, A.LEADER DESC, D.SORT_ORDER ASC
					    		</isEqual>
					    		<isEqual property="sortType" compareValue="DESC">
					    			ORDER BY A.USER_ENGLISH_NAME DESC, A.LEADER DESC, D.SORT_ORDER ASC
					    		</isEqual>
					    	</isNotEqual>
				    	</isEqual>
				    	<isEqual property="sortColumn" compareValue="TEAM_NAME">
				    		<isEqual property="userLocaleCode" compareValue="ko">
					    		<isEqual property="sortType" compareValue="ASC">
					    			ORDER BY A.TEAM_NAME ASC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_NAME ASC
					    		</isEqual>
					    		<isEqual property="sortType" compareValue="DESC">
					    			ORDER BY A.TEAM_NAME DESC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_NAME ASC
					    		</isEqual>
					    	</isEqual>
					    	<isNotEqual property="userLocaleCode" compareValue="ko">
					    		<isEqual property="sortType" compareValue="ASC">
					    			ORDER BY A.TEAM_ENGLISH_NAME ASC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_ENGLISH_NAME ASC
					    		</isEqual>
					    		<isEqual property="sortType" compareValue="DESC">
					    			ORDER BY A.TEAM_ENGLISH_NAME DESC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_ENGLISH_NAME ASC
					    		</isEqual>
					    	</isNotEqual>
				    	</isEqual>
				    	<isEqual property="sortColumn" compareValue="JOB_TITLE_NAME">
				    		<isEqual property="sortType" compareValue="ASC">
				    			ORDER BY D.SORT_ORDER ASC, A.LEADER DESC, A.USER_NAME ASC
				    		</isEqual>
				    		<isEqual property="sortType" compareValue="DESC">
				    			ORDER BY D.SORT_ORDER ASC, A.LEADER DESC, A.USER_NAME ASC
				    		</isEqual>
				    	</isEqual>
				    	<isEqual property="sortColumn" compareValue="MAIL">
				    		<isEqual property="sortType" compareValue="ASC">
				    			ORDER BY A.MAIL ASC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_NAME ASC
				    		</isEqual>
				    		<isEqual property="sortType" compareValue="DESC">
				    			ORDER BY A.MAIL DESC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_NAME ASC
				    		</isEqual>
				    	</isEqual>
				    	<isEqual property="sortColumn" compareValue="MOBILE">
				    		<isEqual property="sortType" compareValue="ASC">
				    			ORDER BY A.MOBILE ASC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_NAME ASC
				    		</isEqual>
				    		<isEqual property="sortType" compareValue="DESC">
				    			ORDER BY A.MOBILE DESC, A.LEADER DESC, D.SORT_ORDER ASC, A.USER_NAME ASC
				    		</isEqual>
				    	</isEqual>
				    </isNotEmpty>
				    <isEmpty property="sortColumn" >
				    	ORDER BY A.LEADER DESC, D.SORT_ORDER ASC, A.USER_NAME ASC
				    </isEmpty>
				 /* ===========================================END  */ 
		<![CDATA[  
		
		    ) A WHERE ROWNUM <=  #endRowIndex# /* 종료  */
		) WHERE RNUM >  #startRowIndex# /* 시작 */
		]]> 
	</select>
	
	<select id="countBySearchCondition" parameterClass="userSearchCondition" resultClass="int">  
		SELECT /* [User_SqlMap.xml] countBySearchCondition */ 
	           COUNT(*)
		FROM IKEP4_EV_USER A  
			 JOIN IKEP4_EV_JOB_TITLE D ON A.JOB_TITLE_CODE = D.JOB_TITLE_CODE  
			 <isNotEmpty property="groupId">
			 JOIN IKEP4_EV_USER_GROUP F ON A.USER_ID = F.USER_ID 
			 </isNotEmpty>
		WHERE 1=1
					<isNotEmpty property="searchWord">
						<isEqual property="searchColumn" compareValue="title">
							AND	(UPPER(A.USER_ID) LIKE '%' || UPPER(#searchWord#) || '%' 
								OR UPPER(A.USER_NAME) LIKE '%' || UPPER(#searchWord#) || '%' 
								OR UPPER(A.USER_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%')
						</isEqual>
						<isEqual property="searchColumn" compareValue="id">
							AND	A.USER_ID LIKE '%' || #searchWord# || '%'
						</isEqual>
						<isEqual property="searchColumn" compareValue="team">
							AND (UPPER(A.TEAM_NAME) LIKE '%' || UPPER(#searchWord#) || '%' 
								OR UPPER(A.TEAM_ENGLISH_NAME) LIKE '%' || UPPER(#searchWord#) || '%')
						</isEqual>
					</isNotEmpty>
					<isNotEmpty property="portalId">
							AND A.PORTAL_ID = #portalId#
					</isNotEmpty>
					<isEmpty property="isAllUser">
							AND A.USER_STATUS = 'C'
					</isEmpty>
					<isNotEmpty property="groupId">
							AND F.GROUP_ID = #groupId#
					</isNotEmpty>
	</select> 
	
	<select id="selectJobCode" parameterClass="java.util.Map" resultClass="String">
		SELECT 
			<isEqual property="paramField" compareValue="group_name">
				group_name as name
			</isEqual>
			<isEqual property="paramField" compareValue="job_class_code">
				job_class_code as name
			</isEqual>
			<isEqual property="paramField" compareValue="job_rank_code">
				job_rank_code as name
			</isEqual>
			<isEqual property="paramField" compareValue="job_duty_code">
				job_duty_code as name
			</isEqual>
			<isEqual property="paramField" compareValue="job_position_code">
				job_position_code as name
			</isEqual>
			<isEqual property="paramField" compareValue="job_title_code">
				job_title_code as name
			</isEqual>
		FROM 
			<isEqual property="paramTable" compareValue="ikep4_ev_group">
				ikep4_ev_group
			</isEqual>
			<isEqual property="paramTable" compareValue="ikep4_ev_job_class">
				ikep4_ev_job_class
			</isEqual>
			<isEqual property="paramTable" compareValue="ikep4_ev_job_rank">
				ikep4_ev_job_rank
			</isEqual>
			<isEqual property="paramTable" compareValue="ikep4_ev_job_duty">
				ikep4_ev_job_duty
			</isEqual>
			<isEqual property="paramTable" compareValue="ikep4_ev_job_position">
				ikep4_ev_job_position
			</isEqual>
			<isEqual property="paramTable" compareValue="ikep4_ev_job_title">
				ikep4_ev_job_title
			</isEqual>
		WHERE 
			<isEqual property="paramCondition" compareValue="group_id">
				group_id = #paramValue#
			</isEqual>
			<isEqual property="paramCondition" compareValue="job_class_name">
				job_class_name = #paramValue#
			</isEqual>
			<isEqual property="paramCondition" compareValue="job_rank_name">
				job_rank_name = #paramValue#
			</isEqual>
			<isEqual property="paramCondition" compareValue="job_duty_name">
				job_duty_name = #paramValue#
			</isEqual>
			<isEqual property="paramCondition" compareValue="job_position_name">
				job_position_name = #paramValue#
			</isEqual>
			<isEqual property="paramCondition" compareValue="job_title_name">
				job_title_name = #paramValue#
			</isEqual>
		AND ROWNUM = 1
	</select>
	
	<select id="selectForPassword" parameterClass="userSearchCondition" resultClass="User">
		SELECT USER_ID userId,
				USER_PASSWORD userPassword,
				EMP_NO empNo
		FROM IKEP4_EV_USER
		WHERE 1=1
		<isEmpty property="isAllUser">
			AND USER_ID = #userId#
		</isEmpty>
	</select>
	
	<update id="updateForPassword" parameterClass="User">
		UPDATE IKEP4_EV_USER
			SET USER_PASSWORD = #userPassword#
			WHERE USER_ID = #userId#
    </update>
    
    <!-- ANSI -->
	<select id="getTargetUser" parameterClass="string" resultClass="User"> 
		/* [User_SqlMap.xml] support.user.member.dao.User.getTargetUser */
	  SELECT EU.user_id as userId,
	  	EU.emp_no as empNo,
	  	EU.user_name as userName,
	  	EU.user_english_name as userEnglishName,
	  	EU.team_name as teamName,
	  	EU.team_english_name as teamEnglishName,
	  	EJT.job_title_name as jobTitleName,
	  	EJT.job_title_english_name as jobTitleEnglishName,
	  	EU.mail,
	  	EU.mobile
	    FROM IKEP4_SV_TARGET ST
	    	INNER JOIN IKEP4_EV_USER EU ON ST.target_id = EU.user_id
	    	INNER JOIN IKEP4_EV_JOB_TITLE EJT ON EU.job_title_code = EJT.job_title_code
	    WHERE ST.target_type = 0 
	          AND ST.SURVEY_ID = #surveyId#
	</select>
	
</sqlMap>